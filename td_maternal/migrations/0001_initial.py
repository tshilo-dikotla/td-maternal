# Generated by Django 2.1.1 on 2018-11-02 06:33

import _socket
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import django_crypto_fields.fields.encrypted_char_field
import django_crypto_fields.fields.encrypted_text_field
import django_crypto_fields.fields.firstname_field
import django_crypto_fields.fields.identity_field
import django_crypto_fields.fields.lastname_field
import django_revision.revision_field
import edc_base.model_fields.custom_fields
import edc_base.model_fields.date_estimated
import edc_base.model_fields.hostname_modification_field
import edc_base.model_fields.userfield
import edc_base.model_fields.uuid_auto_field
import edc_base.model_validators.date
import edc_base.sites.managers
import edc_base.utils
import edc_consent.validators
import edc_protocol.validators
import simple_history.models
import td_maternal.validators
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('edc_registration', '0012_auto_20180116_1528'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('edc_appointment', '0015_auto_20180928_1221'),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='AntenatalEnrollment',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('report_datetime', models.DateTimeField(validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report date')),
                ('enrollment_hiv_status', models.CharField(editable=False, help_text='Auto-filled by enrollment helper', max_length=15, null=True)),
                ('date_at_32wks', models.DateField(editable=False, help_text='Auto-filled by enrollment helper', null=True)),
                ('is_eligible', models.BooleanField(editable=False)),
                ('pending_ultrasound', models.BooleanField(editable=False)),
                ('is_diabetic', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='INELIGIBLE if YES', max_length=3, verbose_name='Are you diabetic?')),
                ('will_breastfeed', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='INELIGIBLE if NO', max_length=3, verbose_name='Are you willing to breast-feed your child for 6 months?')),
                ('will_remain_onstudy', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='INELIGIBLE if NO', max_length=3, verbose_name="Are you willing to remain in the study for the child's first three year of life")),
                ('current_hiv_status', models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('IND', 'Indeterminate'), ('NEVER', 'Never tested for HIV'), ('unknown', 'Unknown'), ('DWTA', "Don't want to answer")], help_text='if POS or NEG, ask for documentation.', max_length=30, verbose_name='What is your current HIV status?')),
                ('evidence_hiv_status', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], help_text='evidence = clinic and/or IDCC records. check regimes/drugs. If NO, more criteria required.', max_length=15, null=True, verbose_name='(Interviewer) Have you seen evidence of the HIV result?')),
                ('week32_test', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=3, verbose_name='Have you tested for HIV before or during this pregnancy?')),
                ('week32_test_date', models.DateField(blank=True, null=True, verbose_name='Date of HIV Test')),
                ('week32_result', models.CharField(blank=True, choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('IND', 'Indeterminate')], max_length=15, null=True, verbose_name='What was your result?')),
                ('evidence_32wk_hiv_status', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], help_text='evidence = clinic and/or IDCC records. check regimes/drugs.', max_length=15, null=True, verbose_name='(Interviewer) Have you seen evidence of the result from HIV test on or before this pregnancy?')),
                ('will_get_arvs', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], help_text='If found POS by RAPID TEST. Then answer YES, can take them OFF STUDY at birth visit if there were not on therapy for atleast 4 weeks.', max_length=15, null=True, verbose_name='(Interviewer) If HIV+ve, do records show that participant is taking, is prescribed,or will be prescribed ARVs (if newly diagnosed) during pregnancy?')),
                ('rapid_test_done', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], help_text="Remember, rapid test is for NEG, UNTESTED, UNKNOWN and Don't want to answer.", max_length=15, null=True, verbose_name='Was a rapid test processed?')),
                ('rapid_test_date', models.DateField(blank=True, null=True, validators=[edc_protocol.validators.date_not_before_study_start, edc_base.model_validators.date.date_not_future], verbose_name='Date of rapid test')),
                ('rapid_test_result', models.CharField(blank=True, choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('IND', 'Indeterminate')], max_length=15, null=True, verbose_name='What is the rapid test result?')),
                ('unenrolled', models.TextField(editable=False, max_length=350, null=True, verbose_name='Reason not enrolled')),
                ('knows_lmp', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='LMP', max_length=3, verbose_name='Does the mother know the approximate date of the first day her last menstrual period?')),
                ('last_period_date', models.DateField(blank=True, help_text='LMP', null=True, validators=[edc_protocol.validators.date_not_before_study_start, edc_base.model_validators.date.date_not_future], verbose_name='What is the approximate date of the first day of the mother’s last menstrual period')),
                ('ga_lmp_enrollment_wks', models.IntegerField(blank=True, help_text=' (weeks of gestation at enrollment, LPM). Eligible if >16 and <36 weeks GA', null=True, verbose_name='GA by LMP at enrollment.')),
                ('ga_lmp_anc_wks', models.IntegerField(blank=True, help_text=' (weeks of gestation at enrollment, ANC)', null=True, verbose_name="What is the mother's gestational age according to ANC records?")),
                ('edd_by_lmp', models.DateField(blank=True, null=True, validators=[edc_protocol.validators.date_not_before_study_start], verbose_name='Estimated date of delivery by lmp')),
                ('registered_subject', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_registration.RegisteredSubject')),
            ],
            options={
                'verbose_name': 'Antenatal Enrollment',
                'verbose_name_plural': 'Antenatal Enrollment',
            },
        ),
        migrations.CreateModel(
            name='AntenatalVisitMembership',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('report_datetime', models.DateTimeField(validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report date')),
                ('antenatal_visits', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Are you ready to start the antenatal enrollment visits?')),
                ('registered_subject', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_registration.RegisteredSubject')),
            ],
            options={
                'verbose_name': 'Antenatal Visit Membership',
                'verbose_name_plural': 'Antenatal Visit Membership',
            },
        ),
        migrations.CreateModel(
            name='ChronicConditions',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, help_text='(suggest 40 characters max.)', max_length=250, unique=True, verbose_name='Name')),
                ('short_name', models.CharField(db_index=True, help_text='This is the stored value, required', max_length=250, unique=True, verbose_name='Stored value')),
                ('display_index', models.IntegerField(db_index=True, default=0, help_text='Index to control display order if not alphabetical, not required', verbose_name='display index')),
                ('field_name', models.CharField(blank=True, editable=False, help_text='Not required', max_length=25, null=True)),
                ('version', models.CharField(default='1.0', editable=False, max_length=35)),
            ],
            options={
                'ordering': ['display_index', 'name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contraceptives',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, help_text='(suggest 40 characters max.)', max_length=250, unique=True, verbose_name='Name')),
                ('short_name', models.CharField(db_index=True, help_text='This is the stored value, required', max_length=250, unique=True, verbose_name='Stored value')),
                ('display_index', models.IntegerField(db_index=True, default=0, help_text='Index to control display order if not alphabetical, not required', verbose_name='display index')),
                ('field_name', models.CharField(blank=True, editable=False, help_text='Not required', max_length=25, null=True)),
                ('version', models.CharField(default='1.0', editable=False, max_length=35)),
            ],
            options={
                'ordering': ['display_index', 'name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeliveryComplications',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, help_text='(suggest 40 characters max.)', max_length=250, unique=True, verbose_name='Name')),
                ('short_name', models.CharField(db_index=True, help_text='This is the stored value, required', max_length=250, unique=True, verbose_name='Stored value')),
                ('display_index', models.IntegerField(db_index=True, default=0, help_text='Index to control display order if not alphabetical, not required', verbose_name='display index')),
                ('field_name', models.CharField(blank=True, editable=False, help_text='Not required', max_length=25, null=True)),
                ('version', models.CharField(default='1.0', editable=False, max_length=35)),
            ],
            options={
                'ordering': ['display_index', 'name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalAntenatalEnrollment',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('report_datetime', models.DateTimeField(validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report date')),
                ('enrollment_hiv_status', models.CharField(editable=False, help_text='Auto-filled by enrollment helper', max_length=15, null=True)),
                ('date_at_32wks', models.DateField(editable=False, help_text='Auto-filled by enrollment helper', null=True)),
                ('is_eligible', models.BooleanField(editable=False)),
                ('pending_ultrasound', models.BooleanField(editable=False)),
                ('is_diabetic', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='INELIGIBLE if YES', max_length=3, verbose_name='Are you diabetic?')),
                ('will_breastfeed', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='INELIGIBLE if NO', max_length=3, verbose_name='Are you willing to breast-feed your child for 6 months?')),
                ('will_remain_onstudy', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='INELIGIBLE if NO', max_length=3, verbose_name="Are you willing to remain in the study for the child's first three year of life")),
                ('current_hiv_status', models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('IND', 'Indeterminate'), ('NEVER', 'Never tested for HIV'), ('unknown', 'Unknown'), ('DWTA', "Don't want to answer")], help_text='if POS or NEG, ask for documentation.', max_length=30, verbose_name='What is your current HIV status?')),
                ('evidence_hiv_status', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], help_text='evidence = clinic and/or IDCC records. check regimes/drugs. If NO, more criteria required.', max_length=15, null=True, verbose_name='(Interviewer) Have you seen evidence of the HIV result?')),
                ('week32_test', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=3, verbose_name='Have you tested for HIV before or during this pregnancy?')),
                ('week32_test_date', models.DateField(blank=True, null=True, verbose_name='Date of HIV Test')),
                ('week32_result', models.CharField(blank=True, choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('IND', 'Indeterminate')], max_length=15, null=True, verbose_name='What was your result?')),
                ('evidence_32wk_hiv_status', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], help_text='evidence = clinic and/or IDCC records. check regimes/drugs.', max_length=15, null=True, verbose_name='(Interviewer) Have you seen evidence of the result from HIV test on or before this pregnancy?')),
                ('will_get_arvs', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], help_text='If found POS by RAPID TEST. Then answer YES, can take them OFF STUDY at birth visit if there were not on therapy for atleast 4 weeks.', max_length=15, null=True, verbose_name='(Interviewer) If HIV+ve, do records show that participant is taking, is prescribed,or will be prescribed ARVs (if newly diagnosed) during pregnancy?')),
                ('rapid_test_done', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], help_text="Remember, rapid test is for NEG, UNTESTED, UNKNOWN and Don't want to answer.", max_length=15, null=True, verbose_name='Was a rapid test processed?')),
                ('rapid_test_date', models.DateField(blank=True, null=True, validators=[edc_protocol.validators.date_not_before_study_start, edc_base.model_validators.date.date_not_future], verbose_name='Date of rapid test')),
                ('rapid_test_result', models.CharField(blank=True, choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('IND', 'Indeterminate')], max_length=15, null=True, verbose_name='What is the rapid test result?')),
                ('unenrolled', models.TextField(editable=False, max_length=350, null=True, verbose_name='Reason not enrolled')),
                ('knows_lmp', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='LMP', max_length=3, verbose_name='Does the mother know the approximate date of the first day her last menstrual period?')),
                ('last_period_date', models.DateField(blank=True, help_text='LMP', null=True, validators=[edc_protocol.validators.date_not_before_study_start, edc_base.model_validators.date.date_not_future], verbose_name='What is the approximate date of the first day of the mother’s last menstrual period')),
                ('ga_lmp_enrollment_wks', models.IntegerField(blank=True, help_text=' (weeks of gestation at enrollment, LPM). Eligible if >16 and <36 weeks GA', null=True, verbose_name='GA by LMP at enrollment.')),
                ('ga_lmp_anc_wks', models.IntegerField(blank=True, help_text=' (weeks of gestation at enrollment, ANC)', null=True, verbose_name="What is the mother's gestational age according to ANC records?")),
                ('edd_by_lmp', models.DateField(blank=True, null=True, validators=[edc_protocol.validators.date_not_before_study_start], verbose_name='Estimated date of delivery by lmp')),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(primary_key=True, serialize=False)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('registered_subject', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_registration.RegisteredSubject')),
            ],
            options={
                'verbose_name': 'historical Antenatal Enrollment',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAntenatalVisitMembership',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('report_datetime', models.DateTimeField(validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report date')),
                ('antenatal_visits', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Are you ready to start the antenatal enrollment visits?')),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(primary_key=True, serialize=False)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('registered_subject', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_registration.RegisteredSubject')),
            ],
            options={
                'verbose_name': 'historical Antenatal Visit Membership',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMaternalContact',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('report_datetime', models.DateTimeField(default=django.utils.timezone.now, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('contact_type', models.CharField(choices=[('voice_call', 'Voice Call'), ('text_message', 'Text Message'), ('in_person', 'In person, e.g. Home visit')], max_length=25, verbose_name='Type of contact')),
                ('contact_datetime', models.DateTimeField(blank=True, help_text='This date can be modified.', null=True, verbose_name='Contact datetime')),
                ('call_reason', models.CharField(choices=[('follow_up', 'Follow up'), ('follow_up_pending_delivery', 'Follow up for pending delivery'), ('missed_visit_follow_up', 'Missed visit follow up'), ('scheduled_appointment', 'Confirm scheduled appointment'), ('follow_up_delivery', 'Follow up on delivery status'), ('follow_up_labs', 'Follow up on abnormal labs'), ('nvp_2_week_adjustment', 'NVP 2 week dose adjustment'), ('OTHER', 'Other, specify')], max_length=30, verbose_name='Reason for call')),
                ('call_reason_other', models.CharField(blank=True, max_length=70, null=True, verbose_name='Other, specify')),
                ('contact_success', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='If Yes, please answer the next question.', max_length=5, verbose_name='Were you able to reach the participant?')),
                ('contact_comment', models.TextField(blank=True, max_length=500, null=True, verbose_name='Outcome of call')),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(primary_key=True, serialize=False)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('registered_subject', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_registration.RegisteredSubject')),
            ],
            options={
                'verbose_name': 'historical maternal contact',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMaternalEligibility',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('subject_identifier', models.CharField(max_length=50, verbose_name='Subject Identifier')),
                ('subject_identifier_as_pk', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('subject_identifier_aka', models.CharField(editable=False, help_text='track a previously allocated identifier.', max_length=50, null=True, verbose_name='Subject Identifier a.k.a')),
                ('slug', models.CharField(db_index=True, default='', editable=False, help_text='a field used for quick search', max_length=250, null=True)),
                ('eligibility_id', models.CharField(db_index=True, editable=False, max_length=36, verbose_name='Eligibility Identifier')),
                ('report_datetime', models.DateTimeField(help_text='Date and time of assessing eligibility', validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date and Time')),
                ('age_in_years', models.IntegerField(verbose_name='What is the age of the participant?')),
                ('has_omang', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Do you have an OMANG?')),
                ('ineligibility', models.TextField(editable=False, max_length=150, null=True, verbose_name='Reason not eligible')),
                ('is_eligible', models.BooleanField(default=False, editable=False)),
                ('is_consented', models.BooleanField(default=False, editable=False)),
                ('has_passed_consent', models.BooleanField(default=False, editable=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(primary_key=True, serialize=False)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('registered_subject', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_registration.RegisteredSubject')),
                ('site', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.Site')),
            ],
            options={
                'verbose_name': 'historical Maternal Eligibility',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMaternalEligibilityLoss',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('report_datetime', models.DateTimeField(default=django.utils.timezone.now, help_text='Date and time of report.', verbose_name='Report Date and Time')),
                ('reason_ineligible', models.TextField(help_text='Gets reasons from Maternal Eligibility.ineligibility', max_length=500, verbose_name='Reason not eligible')),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(primary_key=True, serialize=False)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Maternal Eligibility Loss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMaternalLabourDel',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('report_datetime', models.DateTimeField(validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report date')),
                ('delivery_datetime', models.DateTimeField(help_text='If TIME unknown, estimate', validators=[edc_base.model_validators.date.datetime_not_future], verbose_name='Date and time of delivery :')),
                ('delivery_time_estimated', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Is the delivery TIME estimated?')),
                ('delivery_hospital', models.CharField(choices=[('PMH', 'Gaborone(PMH)'), ('G.West Clinic', 'G.West Clinic'), ('BH3 Clinic', 'BH3 Clinic'), ('Lesirane', 'Lesirane Clinic'), ('Old Naledi', 'Old Naledi'), ('Mafitlhakgosi', 'Mafitlhakgosi'), ('OTHER', 'Other health facilities not associated with study site')], help_text="If 'OTHER', specify below", max_length=65, verbose_name='Place of delivery? ')),
                ('delivery_hospital_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('labour_hrs', models.CharField(max_length=10, verbose_name='How long prior to to delivery, in HRS, did labour begin? ')),
                ('mode_delivery', models.CharField(choices=[('spontaneous vaginal', 'spontaneous vaginal'), ('vaginal forceps', 'vaginal forceps'), ('elective c-section', 'elective C-section'), ('emergent c-section', 'emrgent C-section'), ('OTHER', 'Other delivery mode not listed above')], help_text="If 'OTHER', specify below", max_length=100, verbose_name='What was the mode of delivery?')),
                ('mode_delivery_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('csection_reason', models.CharField(choices=[('N/A', 'Not Applicable'), ('arrest', 'Arrest'), ('non-reassuring fetal fetal heart rate', 'Non-reassuring fetal heart rate'), ('malpresentation/breeech fetus', 'Malpresentation/breech fetus'), ('interruption of hiv transmission', 'Interruption of HIV transmission'), ('failure to progress/descend', 'Failue to progress/descend'), ('fetal anomaly', 'Fetal anomaly'), ('OTHER', 'Other reason for csection not listed above.')], help_text="If 'OTHER', specify below", max_length=100, verbose_name='If C-section was performed, indicate reason below')),
                ('csection_reason_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('delivery_complications_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('live_infants_to_register', models.IntegerField(verbose_name='How many babies are you registering to the study? ')),
                ('still_births', models.IntegerField(default=0, verbose_name='How many still births or miscarriages?')),
                ('valid_regiment_duration', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], help_text='If not 4 or more weeks then participant will go OFF STUDY.', max_length=15, null=True, verbose_name='(Interviewer) If HIV+ve, has the participant been on the ART regimen for at least 4 weeks in pregnancy?')),
                ('arv_initiation_date', models.DateField(blank=True, null=True, verbose_name='(Interviewer) If on ART, when did the participant initiate therapy for this pregnancy?')),
                ('delivery_comment', models.TextField(blank=True, max_length=250, null=True, verbose_name='List any additional information about the labour and delivery (mother only) ')),
                ('comment', models.TextField(blank=True, max_length=250, null=True, verbose_name='Comment if any additional pertinent information ')),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(primary_key=True, serialize=False)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('registered_subject', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_registration.RegisteredSubject')),
            ],
            options={
                'verbose_name': 'historical Delivery',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMaternalVisit',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('subject_identifier', models.CharField(max_length=50, verbose_name='Subject Identifier')),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('visit_schedule_name', models.CharField(editable=False, help_text='the name of the visit schedule used to find the "schedule"', max_length=25)),
                ('schedule_name', models.CharField(editable=False, max_length=25)),
                ('visit_code', models.CharField(editable=False, max_length=25, null=True)),
                ('visit_code_sequence', models.IntegerField(blank=True, default=0, help_text='An integer to represent the sequence of additional appointments relative to the base appointment, 0, needed to complete data collection for the timepoint. (NNNN.0)', null=True, verbose_name='Sequence')),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text='Date and time of this report', validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Visit Date and Time')),
                ('reason_unscheduled_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=25, null=True, verbose_name='If "Other" reason for unscheduled visit, specify')),
                ('reason_missed', models.CharField(blank=True, max_length=35, null=True, verbose_name="If 'Missed' above, provide the reason the scheduled visit was missed")),
                ('reason_missed_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=25, null=True, verbose_name='If "Other" reason for missed visit, specify')),
                ('study_status', models.CharField(max_length=50, null=True, verbose_name="What is the participant's current study status")),
                ('require_crfs', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=10, verbose_name='Are scheduled data being submitted with this visit?')),
                ('info_source_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If "Other" source of information, specify')),
                ('survival_status', models.CharField(choices=[('alive', 'Alive'), ('dead', 'Deceased'), ('unknown', 'Unknown')], default='alive', max_length=10, null=True, verbose_name="Participant's survival status")),
                ('last_alive_date', models.DateField(blank=True, null=True, validators=[edc_protocol.validators.date_not_before_study_start, edc_base.model_validators.date.date_not_future], verbose_name='Date participant last known alive')),
                ('comments', models.TextField(blank=True, max_length=250, null=True, verbose_name='Comment if any additional pertinent information about the participant')),
                ('reason', models.CharField(choices=[('scheduled', 'Scheduled visit/contact'), ('missed', 'Missed Scheduled visit'), ('unscheduled', 'Unscheduled visit at which lab samples or data are being submitted'), ('lost', 'Lost to follow-up (use only when taking subject off study)'), ('failed eligibility', 'Subject failed enrollment eligibility'), ('completed protocol', 'Subject has completed the study')], max_length=25, verbose_name='What is the reason for this visit report?')),
                ('reason_unscheduled', models.CharField(choices=[('Routine oncology', 'Routine oncology clinic visit'), ('Ill oncology', 'Ill oncology clinic visit'), ('Patient called', 'Patient called to come for visit'), ('OTHER', 'Other, specify:')], default='N/A', max_length=25, verbose_name="If 'Unscheduled' above, provide reason for the unscheduled visit")),
                ('info_source', models.CharField(choices=[('participant', 'Clinic visit with participant'), ('other_contact', 'Other contact with participant (for example telephone call)'), ('other_doctor', 'Contact with external health care provider/medical doctor'), ('family', 'Contact with family or designated person who can provide information'), ('chart', 'Hospital chart or other medical record'), ('OTHER', 'Other')], max_length=25, verbose_name='What is the main source of this information?')),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(primary_key=True, serialize=False)),
                ('appointment', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_appointment.Appointment')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.Site')),
            ],
            options={
                'verbose_name': 'historical Maternal Visit',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSpecimenConsent',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('may_store_genetic_samples', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name='Does the participant agree that a portion of the blood sample that is taken be stored for genetic analysis?')),
                ('may_store_samples', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Does the participant agree to have samples stored after the study has ended')),
                ('is_incarcerated', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text="( if 'Yes' STOP participant cannot be consented )", max_length=3, null=True, validators=[edc_consent.validators.eligible_if_no], verbose_name='Is the participant under involuntary incarceration?')),
                ('is_literate', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text="If 'No' provide witness's name on this form and signature on the paper document.", max_length=3, verbose_name='Is the participant literate?')),
                ('witness_name', django_crypto_fields.fields.lastname_field.LastnameField(blank=True, help_text="Required only if participant is illiterate.<br>Format is 'LASTNAME, FIRSTNAME'. All uppercase separated by a comma. (Encryption: RSA local)", max_length=71, null=True, validators=[edc_consent.validators.FullNameValidator()], verbose_name="Witness's last and first name")),
                ('language', models.CharField(choices=[('af', 'Afrikaans'), ('ny', 'Chichewa'), ('en', 'English'), ('xh', 'isiXhosa'), ('lg', 'Luganda'), ('rny', 'Runyankore'), ('tn', 'Setswana'), ('sn', 'Shona')], help_text='The language used for the consent process will also be used during data collection.', max_length=25, verbose_name='Language of consent')),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(primary_key=True, serialize=False)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('registered_subject', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_registration.RegisteredSubject')),
            ],
            options={
                'verbose_name': 'historical Specimen Consent',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSubjectConsent',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('subject_identifier', models.CharField(max_length=50, verbose_name='Subject Identifier')),
                ('subject_identifier_as_pk', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('subject_identifier_aka', models.CharField(editable=False, help_text='track a previously allocated identifier.', max_length=50, null=True, verbose_name='Subject Identifier a.k.a')),
                ('citizen', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Is the participant a Botswana citizen? ')),
                ('legal_marriage', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', help_text="If 'No', participant may not be consented.", max_length=3, null=True, verbose_name='If not a citizen, is the participant legally married to a Botswana citizen?')),
                ('marriage_certificate', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', help_text="If 'No', participant may not be consented.", max_length=3, null=True, verbose_name='[Interviewer] Has the participant produced the marriage certificate as proof? ')),
                ('marriage_certificate_no', models.CharField(blank=True, help_text='e.g. 000/YYYY', max_length=9, null=True, verbose_name='What is the marriage certificate number?')),
                ('identity', django_crypto_fields.fields.identity_field.IdentityField(help_text=' (Encryption: RSA local)', max_length=71, verbose_name='Identity number')),
                ('identity_type', models.CharField(max_length=25, verbose_name='What type of identity number is this?')),
                ('confirm_identity', django_crypto_fields.fields.identity_field.IdentityField(help_text='Retype the identity number (Encryption: RSA local)', max_length=71, null=True)),
                ('first_name', django_crypto_fields.fields.firstname_field.FirstnameField(blank=True, help_text=' (Encryption: RSA local)', max_length=71, null=True)),
                ('last_name', django_crypto_fields.fields.lastname_field.LastnameField(blank=True, help_text=' (Encryption: RSA local)', max_length=71, null=True, verbose_name='Last name')),
                ('initials', django_crypto_fields.fields.encrypted_char_field.EncryptedCharField(blank=True, help_text=' (Encryption: RSA local)', max_length=71, null=True, validators=[django.core.validators.RegexValidator(message='Ensure initials consist of letters only in upper case, no spaces.', regex='^[A-Z]{2,3}$')])),
                ('dob', models.DateField(null=True, verbose_name='Date of birth')),
                ('is_dob_estimated', edc_base.model_fields.date_estimated.IsDateEstimatedField(choices=[('-', 'No'), ('D', 'Yes, estimated the Day'), ('MD', 'Yes, estimated Month and Day'), ('YMD', 'Yes, estimated Year, Month and Day')], help_text='If the exact date is not known, please indicate which part of the date is estimated.', max_length=25, null=True, verbose_name='Is date of birth estimated?')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('U', 'Undetermined')], max_length=1, null=True, verbose_name='Gender')),
                ('guardian_name', django_crypto_fields.fields.lastname_field.LastnameField(blank=True, help_text="Required only if participant is a minor.<BR>Format is 'LASTNAME, FIRSTNAME'. All uppercase separated by a comma. (Encryption: RSA local)", max_length=71, null=True, validators=[edc_consent.validators.FullNameValidator()], verbose_name="Guardian's last and first name")),
                ('subject_type', models.CharField(max_length=25)),
                ('consent_reviewed', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='If no, participant is not eligible.', max_length=3, null=True, validators=[edc_consent.validators.eligible_if_yes], verbose_name='I have reviewed the consent with the participant')),
                ('study_questions', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='If no, participant is not eligible.', max_length=3, null=True, validators=[edc_consent.validators.eligible_if_yes], verbose_name='I have answered all questions the participant had about the study')),
                ('assessment_score', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='If no, participant is not eligible.', max_length=3, null=True, validators=[edc_consent.validators.eligible_if_yes], verbose_name='I have asked the participant questions about this study and the participant has demonstrated understanding')),
                ('consent_signature', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='If no, participant is not eligible.', max_length=3, null=True, validators=[edc_consent.validators.eligible_if_yes], verbose_name='I have verified that the participant has signed the consent form')),
                ('consent_copy', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('Declined', 'Yes, but subject declined copy')], help_text='If declined, return copy with the consent', max_length=20, null=True, validators=[edc_consent.validators.eligible_if_yes_or_declined], verbose_name='I have provided the participant with a copy of their signed informed consent')),
                ('is_incarcerated', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text="( if 'Yes' STOP participant cannot be consented )", max_length=3, null=True, validators=[edc_consent.validators.eligible_if_no], verbose_name='Is the participant under involuntary incarceration?')),
                ('is_literate', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text="If 'No' provide witness's name on this form and signature on the paper document.", max_length=3, verbose_name='Is the participant literate?')),
                ('witness_name', django_crypto_fields.fields.lastname_field.LastnameField(blank=True, help_text="Required only if participant is illiterate.<br>Format is 'LASTNAME, FIRSTNAME'. All uppercase separated by a comma. (Encryption: RSA local)", max_length=71, null=True, validators=[edc_consent.validators.FullNameValidator()], verbose_name="Witness's last and first name")),
                ('language', models.CharField(choices=[('af', 'Afrikaans'), ('ny', 'Chichewa'), ('en', 'English'), ('xh', 'isiXhosa'), ('lg', 'Luganda'), ('rny', 'Runyankore'), ('tn', 'Setswana'), ('sn', 'Shona')], help_text='The language used for the consent process will also be used during data collection.', max_length=25, verbose_name='Language of consent')),
                ('is_verified', models.BooleanField(default=False, editable=False)),
                ('is_verified_datetime', models.DateTimeField(editable=False, null=True)),
                ('verified_by', models.CharField(editable=False, max_length=25, null=True)),
                ('consent_datetime', models.DateTimeField(validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Consent date and time')),
                ('report_datetime', models.DateTimeField(editable=False, null=True)),
                ('version', models.CharField(editable=False, help_text="See 'Consent Type' for consent versions by period.", max_length=10, verbose_name='Consent version')),
                ('updates_versions', models.BooleanField(default=False)),
                ('sid', models.CharField(blank=True, editable=False, help_text='Used for randomization against a prepared rando-list.', max_length=15, null=True, verbose_name='SID')),
                ('comment', django_crypto_fields.fields.encrypted_text_field.EncryptedTextField(blank=True, help_text=' (Encryption: AES local)', max_length=250, null=True, verbose_name='Comment')),
                ('dm_comment', models.CharField(editable=False, help_text='see also edc.data manager.', max_length=150, null=True, verbose_name='Data Management comment')),
                ('consent_identifier', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A unique identifier for this consent instance')),
                ('slug', models.CharField(db_index=True, default='', editable=False, help_text='a field used for quick search', max_length=250, null=True)),
                ('recruit_source', models.CharField(choices=[('ANC clinic staff', 'ANC clinic staff'), ('BHP recruiter/clinician', 'BHP recruiter/clinician'), ('OTHER', 'Other, specify')], max_length=75, verbose_name='The mother first learned about the tshilo dikotla study from ')),
                ('recruit_source_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='if other recruitment source, specify...')),
                ('recruitment_clinic', models.CharField(choices=[('PMH', 'Gaborone(PMH)'), ('G.West Clinic', 'G.West Clinic'), ('BH3 Clinic', 'BH3 Clinic'), ('Ext2', 'Extension 2 Clinic'), ('Nkoyaphiri', 'Nkoyaphiri Clinic'), ('Lesirane', 'Lesirane Clinic'), ('Old Naledi', 'Old Naledi'), ('Mafitlhakgosi', 'Mafitlhakgosi'), ('OTHER', 'Other health facilities not associated with study site')], max_length=100, verbose_name='The mother was recruited from')),
                ('recruitment_clinic_other', models.CharField(blank=True, max_length=100, null=True, verbose_name='if other recruitment clinic, specify...')),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(primary_key=True, serialize=False)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Maternal Consent',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Malformations',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, help_text='(suggest 40 characters max.)', max_length=250, unique=True, verbose_name='Name')),
                ('short_name', models.CharField(db_index=True, help_text='This is the stored value, required', max_length=250, unique=True, verbose_name='Stored value')),
                ('display_index', models.IntegerField(db_index=True, default=0, help_text='Index to control display order if not alphabetical, not required', verbose_name='display index')),
                ('field_name', models.CharField(blank=True, editable=False, help_text='Not required', max_length=25, null=True)),
                ('version', models.CharField(default='1.0', editable=False, max_length=35)),
            ],
            options={
                'ordering': ['display_index', 'name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalArv',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('arv_code', models.CharField(choices=[('Abacavir', 'ABC'), ('Zidovudine', 'AZT'), ('Tenoforvir', 'TDF'), ('Lamivudine', '3TC'), ('Emtricitabine', 'FTC'), ('Nevirapine', 'NVP'), ('Efavirenz', 'EFV'), ('Aluvia', 'ALU'), ('Dolutegravir', 'DTG'), ('HAART,unknown', 'HAART,unknown')], help_text='Regimen has to be at least 3.', max_length=35, verbose_name='ARV code')),
                ('start_date', models.DateField(help_text='WARNING: If date started is less than 4 weeks at delivery, complete off study.', null=True, validators=[edc_base.model_validators.date.date_not_future], verbose_name='Date Started')),
                ('stop_date', models.DateField(blank=True, null=True, verbose_name='Date Stopped')),
                ('reason_for_stop', models.CharField(blank=True, choices=[('switch for tolerability', 'Switch for tolerability'), ('switch for drug outage', 'Switch for drug outage'), ('Treatment failure', 'Treatment failure'), ('OTHER', 'Other, specify:')], help_text='If "Treatment Failure", notify study coordinator', max_length=50, null=True, verbose_name='Reason for stop')),
                ('reason_for_stop_other', models.TextField(blank=True, max_length=250, null=True, verbose_name='Other, specify ')),
            ],
            options={
                'verbose_name': 'Maternal ARV',
                'verbose_name_plural': 'Maternal ARV',
            },
        ),
        migrations.CreateModel(
            name='MaternalArvPost',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('form_as_json', models.TextField(editable=False, help_text='System field to save form.as_json. form.as_json should be called in modeladmin.save_model', null=True)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('on_arv_since', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text="If 'NO' End. Otherwise continue go to section one", max_length=25, verbose_name='Was the mother supposed to be on triple ARVs any time since the last attended scheduled visit?')),
                ('on_arv_reason', models.CharField(choices=[('maternal masa', '1. HAART for maternal treatment (qualifies by Botswana guidelines)'), ('pmtct bf', '2. HAART for PMTCT while breastfeeding'), ('pp arv tail', '3. Brief postpartum antiretroviral "tail"'), ('unsure', '4. Unsure'), ('OTHER', '9. OTHER'), ('N/A', 'Not applicable')], default='N/A', max_length=25, verbose_name='Reason for triple ARVs ')),
                ('on_arv_reason_other', models.TextField(blank=True, max_length=35, null=True, verbose_name='if other, specify')),
                ('arv_status', models.CharField(choices=[('no_mod', '1. No modifications made since the last attended scheduled visit or today'), ('start', '2. Starting today or has started since last attended scheduled visit'), ('discontinued', '3. Permanently discontinued at or before the last attended scheduled visit'), ('never started', '4. Never started'), ('modified', '5. Change in at least one medication since the last attended scheduled visit or today'), ('N/A', 'Not applicable')], default='N/A', max_length=25, verbose_name="What is the status of the participant's antiretroviral treatment / prophylaxis at this visit or since the last visit? ")),
            ],
            options={
                'verbose_name': 'Maternal ARV Post',
                'verbose_name_plural': 'Maternal ARV Post',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalArvPostAdh',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('form_as_json', models.TextField(editable=False, help_text='System field to save form.as_json. form.as_json should be called in modeladmin.save_model', null=True)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('missed_doses', models.IntegerField(verbose_name='Since the last attended last scheduled visit, how many doses of triple ARVs were missed? ')),
                ('missed_days', models.IntegerField(default=0, verbose_name='Since the last attended scheduled visit, how many entire days were triple ARVS not taken?')),
                ('missed_days_discnt', models.IntegerField(default=0, verbose_name='If triple ARVs discontinued by health provider, how many days were triple ARVs missed prior to discontinuation?')),
                ('comment', models.TextField(blank=True, max_length=250, null=True, verbose_name='Comment')),
            ],
            options={
                'verbose_name': 'Maternal ARVs Post: Adherence',
                'verbose_name_plural': 'Maternal ARVs Post: Adherence',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalArvPostMed',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('arv_code', models.CharField(choices=[('Nevirapine', 'NVP'), ('Kaletra', 'KAL'), ('Aluvia', 'ALU'), ('Truvada', 'TRV'), ('Tenoforvir', 'TDF'), ('Zidovudine', 'AZT'), ('Lamivudine', '3TC'), ('Efavirenz', 'EFV'), ('Didanosine', 'DDI'), ('Stavudine', 'D4T'), ('Nelfinavir', 'NFV'), ('Abacavir', 'ABC'), ('Combivir', 'CBV'), ('Ritonavir', 'RTV'), ('Trizivir', 'TZV'), ('Raltegravir', 'RAL'), ('Saquinavir,soft gel capsule', 'FOR'), ('Saquinavir,hard capsule', 'INV'), ('Kaletra or Aluvia', 'KAL or ALU'), ('Atripla', 'ATR'), ('HAART,unknown', 'HAART,unknown')], max_length=25, verbose_name='ARV Code')),
                ('dose_status', models.CharField(choices=[('New', 'New'), ('Permanently discontinued', 'Permanently discontinued'), ('Temporarily held', 'Temporarily held'), ('Dose modified', 'Dose modified'), ('Resumed', 'Resumed'), ('Not initiated', 'Not initiated')], max_length=25, verbose_name='Dose Status')),
                ('modification_date', models.DateField(verbose_name='Date ARV Modified')),
                ('modification_code', models.CharField(choices=[('Initial dose', 'Initial dose'), ('Never started', 'Never started'), ('Toxicity decreased_resolved', 'Toxicity decreased/resolved'), ('Completed PMTCT intervention', 'Completed PMTCT intervention'), ('Completed postpartum tail', 'Completed postpartum "tail"'), ('Scheduled dose increase', 'Scheduled dose increase'), ('Confirmed infant HIV infection, ending study drug', 'Confirmed infant HIV infection, ending study drug'), ('completed protocol', 'Completion of protocol-required period of study treatment'), ('HAART not available', 'HAART not available'), ('Anemia', 'Anemia'), ('Bleeding', 'Bleeding'), ('CNS symptoms', 'CNS symptoms (sleep, psych, etc)'), ('Diarrhea', 'Diarrhea'), ('Fatigue', 'Fatigue'), ('Headache', 'Headache'), ('Hepatotoxicity', 'Hepatotoxicity'), ('Nausea', 'Nausea'), ('Neutropenia', 'Neutropenia'), ('Thrombocytopenia', 'Thrombocytopenia'), ('Vomiting', 'Vomiting'), ('Rash', 'Rash'), ('Rash resolved', 'Rash resolved'), ('Neuropathy', 'Neuropathy'), ('Hypersensitivity_allergic reaction', 'Hypersensitivity / allergic reaction'), ('Pancreatitis', 'Pancreatitis'), ('Lactic Acidiosis', 'Lactic Acidiosis'), ('Pancytopenia', 'Pancytopenia'), ('Virologic failure', 'Virologic failure'), ('Immunologic failure', 'Immunologic failure(CD4)'), ('Clinical failure', 'Clinical failure'), ('Clinician request', 'Clinician request, other reason (including convenience)'), ('Subject request', 'Subject request, other reason (including convenience)'), ('Non-adherence with clinic visits', 'Non-adherence with clinic visits'), ('Non-adherence with ARVs', 'Non-adherence with ARVs'), ('Death', 'Death'), ('OTHER', 'Other')], max_length=50, verbose_name='Reason for Modification')),
                ('maternal_arv_post', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalArvPost')),
            ],
            options={
                'verbose_name': 'Maternal ARVs Post: Meds',
                'verbose_name_plural': 'Maternal ARVs Post: Meds',
            },
        ),
        migrations.CreateModel(
            name='MaternalArvPreg',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('form_as_json', models.TextField(editable=False, help_text='System field to save form.as_json. form.as_json should be called in modeladmin.save_model', null=True)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('took_arv', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='(NOT including single -dose NVP in labour)', max_length=3, verbose_name='Did the mother receive any ARVs during this pregnancy?')),
                ('is_interrupt', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Was there an interruption in the ARVs received during pregnancy through delivery of >/=3days?')),
                ('interrupt', models.CharField(choices=[('TOXICITY', 'Toxicity'), ('NO_DRUGS', 'No drugs available'), ('NO_REFILL', "Didn't get to clinic for refill"), ('FORGOT', 'Mother forgot to take the ARVs'), ('OTHER', 'Other'), ('N/A', 'Not Applicable')], default='N/A', max_length=50, verbose_name='Please give reason for interruption')),
                ('interrupt_other', models.TextField(blank=True, max_length=250, null=True, verbose_name='Other, specify ')),
            ],
            options={
                'verbose_name': 'Maternal ARV In This Preg',
                'verbose_name_plural': 'Maternal ARV In This Preg',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalClinicalMeasurementsOne',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('form_as_json', models.TextField(editable=False, help_text='System field to save form.as_json. form.as_json should be called in modeladmin.save_model', null=True)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('weight_kg', models.DecimalField(decimal_places=2, help_text='Measured in Kilograms (kg)', max_digits=5, validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(136)], verbose_name="Mother's weight? ")),
                ('systolic_bp', models.IntegerField(help_text='in mm e.g. 120, should be between 75 and 220.', validators=[django.core.validators.MinValueValidator(75), django.core.validators.MaxValueValidator(220)], verbose_name="Mother's systolic blood pressure?")),
                ('diastolic_bp', models.IntegerField(help_text='in hg e.g. 80, should be between 35 and 130.', validators=[django.core.validators.MinValueValidator(35), django.core.validators.MaxValueValidator(150)], verbose_name="Mother's diastolic blood pressure?")),
                ('height', models.DecimalField(decimal_places=2, help_text='Measured in Centimeters (cm)', max_digits=5, validators=[django.core.validators.MinValueValidator(114), django.core.validators.MaxValueValidator(195)], verbose_name="Mother's height? ")),
            ],
            options={
                'verbose_name': 'Maternal Clinical Measurements One',
                'verbose_name_plural': 'Maternal Clinical Measurements One',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalClinicalMeasurementsTwo',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('form_as_json', models.TextField(editable=False, help_text='System field to save form.as_json. form.as_json should be called in modeladmin.save_model', null=True)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('weight_kg', models.DecimalField(decimal_places=2, help_text='Measured in Kilograms (kg)', max_digits=5, validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(136)], verbose_name="Mother's weight? ")),
                ('systolic_bp', models.IntegerField(help_text='in mm e.g. 120, should be between 75 and 220.', validators=[django.core.validators.MinValueValidator(75), django.core.validators.MaxValueValidator(220)], verbose_name="Mother's systolic blood pressure?")),
                ('diastolic_bp', models.IntegerField(help_text='in hg e.g. 80, should be between 35 and 130.', validators=[django.core.validators.MinValueValidator(35), django.core.validators.MaxValueValidator(150)], verbose_name="Mother's diastolic blood pressure?")),
            ],
            options={
                'verbose_name': 'Maternal Clinical Measurements Two',
                'verbose_name_plural': 'Maternal Clinical Measurements Two',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalContact',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('report_datetime', models.DateTimeField(default=django.utils.timezone.now, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('contact_type', models.CharField(choices=[('voice_call', 'Voice Call'), ('text_message', 'Text Message'), ('in_person', 'In person, e.g. Home visit')], max_length=25, verbose_name='Type of contact')),
                ('contact_datetime', models.DateTimeField(blank=True, help_text='This date can be modified.', null=True, verbose_name='Contact datetime')),
                ('call_reason', models.CharField(choices=[('follow_up', 'Follow up'), ('follow_up_pending_delivery', 'Follow up for pending delivery'), ('missed_visit_follow_up', 'Missed visit follow up'), ('scheduled_appointment', 'Confirm scheduled appointment'), ('follow_up_delivery', 'Follow up on delivery status'), ('follow_up_labs', 'Follow up on abnormal labs'), ('nvp_2_week_adjustment', 'NVP 2 week dose adjustment'), ('OTHER', 'Other, specify')], max_length=30, verbose_name='Reason for call')),
                ('call_reason_other', models.CharField(blank=True, max_length=70, null=True, verbose_name='Other, specify')),
                ('contact_success', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='If Yes, please answer the next question.', max_length=5, verbose_name='Were you able to reach the participant?')),
                ('contact_comment', models.TextField(blank=True, max_length=500, null=True, verbose_name='Outcome of call')),
                ('registered_subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='edc_registration.RegisteredSubject')),
            ],
        ),
        migrations.CreateModel(
            name='MaternalContraception',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('form_as_json', models.TextField(editable=False, help_text='System field to save form.as_json. form.as_json should be called in modeladmin.save_model', null=True)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('more_children', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('Dont know right now', 'I do not know right now'), ('DWTA', "Don't want to answer")], help_text='If the answer to this question is "YES" continue to the next question else skip to question 6.', max_length=25, verbose_name='Do you desire more children?')),
                ('next_child', models.CharField(blank=True, choices=[('within 2years', 'Within the next 2 years'), ('between 2-5years from now', 'From 2 years to 5 years from now'), ('More than 5years from now', 'More than 5 years from now'), ('Dont know right now', 'I do not know right now'), ('DWTA', "Don't want to answer")], max_length=35, null=True, verbose_name='When would you like to have your next child?')),
                ('contraceptive_partner', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('no_partner', 'I do not currently have a partner'), ('DWTA', "Don't want to answer")], max_length=10, verbose_name='Have you discussed a contraceptive method with your current partner?')),
                ('contraceptive_relative_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, help_text="If 'Other' is selected above, please type in the person or persons (by description only and not by name) with whom you have discussed your contraceptive method", max_length=35, null=True, verbose_name='If Other enter text description of other please give other people you discussed with')),
                ('influential_decision_making', models.CharField(choices=[('independent_decision', 'I made the decision independent of any discussions I have had.'), ('partner_most_influential', 'My partner was the most influential.'), ('mother_most_influential', 'My mother was the most influential.'), ('sister_most_influential', 'My sister was the most influential.'), ('auntie_most_influential', 'My auntie was the most influential.'), ('mother_in_law_most_influential', 'My mother-in-law was the most influential'), ('DWTA', 'I do not wish to answer this question'), ('N/A', 'Not Applicable'), ('OTHER', 'Another person was the most influential (Please type in the description of this person below)')], max_length=50, verbose_name='Of the following individuals listed in questions 3-6, please indicate who has influenced you the most in making the decision')),
                ('influential_decision_making_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If another person was most influential, please give details below.')),
                ('uses_contraceptive', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('DWTA', "Don't want to answer")], max_length=35, verbose_name='Are you currently using a contraceptive method?')),
                ('contraceptive_startdate', models.DateField(blank=True, null=True, verbose_name='If yes, what date after delivery did you start using this contraceptive method?')),
                ('contr_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other enter text description of other contraceptive method being used')),
                ('another_pregnancy', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('DWTA', "Don't want to answer")], max_length=35, verbose_name='Have you become pregnant since you last delivered?')),
                ('pregnancy_date', models.DateField(blank=True, null=True, verbose_name='If yes, around what date did you find out?')),
                ('pap_smear', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('never_had_pap_smear', 'I have never had a Pap smear'), ('DWTA', "Don't want to answer")], max_length=35, verbose_name='Do you know the date of your last Pap smear?')),
                ('pap_smear_date', models.DateField(blank=True, null=True, verbose_name='Please provide the date of your last Pap smear.')),
                ('pap_smear_estimate', models.CharField(blank=True, choices=[('within_last_6months', 'Within the last 6 months'), ('more_than_6months_within_1year', 'More than 6 months ago but within the last year'), ('more_than_1year_within_2years', 'More than one year ago but within the last two years'), ('more_than_1year_within_5years', 'More than one year ago but within the last five years'), ('more_than_5years', 'More than five years ago')], max_length=60, null=True, verbose_name='If you dont know that date of your last Pap Smear, is it possible that your last Pap smear was:')),
                ('pap_smear_result', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('DWTA', "Don't want to answer")], max_length=20, null=True, verbose_name='Do you know the result of your last Pap smear')),
                ('pap_smear_result_status', models.CharField(blank=True, choices=[('normal', 'Normal'), ('abnormal', 'Abnormal'), ('DWTA', "Don't Want to Answer")], max_length=30, null=True, verbose_name='The results of my Pap smear were: ')),
                ('pap_smear_result_abnormal', models.TextField(blank=True, max_length=50, null=True, verbose_name='If the results of the Pap Smear were abnormal, can you please share the results with us: ')),
                ('date_notified', models.DateField(blank=True, null=True, verbose_name='When were you notified of these results?')),
                ('srh_referral', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('DWTA', "Don't want to answer")], max_length=25, verbose_name='Would you like to be referred to the Sexual Reproductive Health Clinic?')),
                ('contr', models.ManyToManyField(to='td_maternal.Contraceptives', verbose_name='Please share with us your current contraceptive methods')),
            ],
            options={
                'verbose_name': 'Maternal Contraception',
                'verbose_name_plural': 'Maternal Contraception',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalDemographics',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('form_as_json', models.TextField(editable=False, help_text='System field to save form.as_json. form.as_json should be called in modeladmin.save_model', null=True)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Cohabiting', 'Cohabiting'), ('Widowed', 'Widowed'), ('Divorced', 'Divorced'), ('OTHER', 'Other, specify')], max_length=25, verbose_name='Current Marital status ')),
                ('marital_status_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='if other specify...')),
                ('ethnicity', models.CharField(choices=[('Black African', 'Black African'), ('Caucasian', 'Caucasian'), ('Asian', 'Asian'), ('OTHER', 'Other, specify')], max_length=25, verbose_name='Ethnicity ')),
                ('ethnicity_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='if other specify...')),
                ('highest_education', models.CharField(choices=[('None', 'None'), ('Primary', 'Primary'), ('Junior Secondary', 'Junior Secondary'), ('Senior Secondary', 'Senior Secondary'), ('Tertiary', 'Tertiary')], max_length=25, verbose_name='Highest educational level completed ')),
                ('current_occupation', models.CharField(choices=[('Housewife', 'Housewife'), ('Salaried (government)', 'Salaried (government)'), ('Salaried (private, not including domestic work)', 'Salaried (private, not including domestic work)'), ('Domestic work (paid)', 'Domestic work (paid)'), ('Self-employed', 'Self-employed'), ('Student', 'Student'), ('Unemployed', 'Unemployed'), ('OTHER', 'Other, specify')], max_length=75, verbose_name='Current occupation')),
                ('current_occupation_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='if other specify...')),
                ('provides_money', models.CharField(choices=[('You', 'You'), ('Partner/husband', 'Partner/husband'), ('Mother', 'Mother'), ('Father', 'Father'), ('Sister', 'Sister'), ('Brother', 'Brother'), ('Aunt', 'Aunt'), ('Uncle', 'Uncle'), ('Grandmother', 'Grandmother'), ('Grandfather', 'Grandfather'), ('Mother-in-law or Father-in-law', 'Mother-in-law or Father-in-law'), ('Friend', 'Friend'), ('Work collegues', 'Work collegues'), ('Unsure', 'Unsure'), ('OTHER', 'Other, specify')], max_length=50, verbose_name='Who provides most of your money?')),
                ('provides_money_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='if other specify...')),
                ('money_earned', models.CharField(choices=[('None', 'None'), ('<P200 per month / <P47 per week', '<P200 per month / <P47 per week'), ('P200-500 per month / P47-116 per week', 'P200-500 per month / P47-116 per week'), ('P501-1000 per month / P117 - 231 per week', 'P501-1000 per month / P117 - 231 per week'), ('P1001-5000 per month / P212 - 1157 per week', 'P1001-5000 per month / P212 - 1157 per week'), ('>P5000 per month / >P1157 per week', '>P5000 per month / >P1157 per week'), ('Unsure', 'Unsure'), ('OTHER', 'Other, specify')], max_length=50, verbose_name='How much money do you personally earn? ')),
                ('money_earned_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='if other specify...')),
                ('own_phone', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name='Do you have your own cell phone that you use regularly?')),
                ('water_source', models.CharField(choices=[('Piped directly into the house', 'Piped directly into the house'), ('Tap in the yard', 'Tap in the yard'), ('Communal standpipe', 'Communal standpipe'), ('OTHER', 'Other water source (stream, borehole, rainwater, etc)')], help_text='the home where you are likely to spend the most time with your baby over the first 18 months', max_length=50, verbose_name="At your primary home  where do you get most of your family's drinking water?")),
                ('house_electrified', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name='Is there electricity in this house / compound? ')),
                ('house_fridge', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name='Is there a refrigerator being used in this house / compound?  ')),
                ('cooking_method', models.CharField(choices=[('Gas or electric stove', 'Gas or electric stove'), ('Paraffin stove', 'Paraffin stove'), ('Wood-burning stove or open fire', 'Wood-burning stove or open fire'), ('No regular means of heating', 'No regular means of heating')], max_length=50, verbose_name='What is the primary method of cooking in this house / compound?')),
                ('toilet_facility', models.CharField(choices=[('Indoor toilet', 'Indoor toilet'), ('Private latrine for your house/compound', 'Private latrine for your house/compound'), ('Shared latrine with other compounds', 'Shared latrine with other compounds'), ('No latrine facilities', 'No latrine facilities'), ('OTHER', 'Other, specify')], max_length=50, verbose_name='Which of the following types of toilet facilities do you most often use at this house / compound? ')),
                ('toilet_facility_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='if other specify...')),
                ('house_people_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='How many people, including yourself, stay in this home / compound most of the time?')),
                ('house_type', models.CharField(choices=[('Formal:Tin-roofed, concrete walls', 'Formal: Tin-roofed, concrete walls'), ('Informal: Mud-walled or thatched', 'Informal: Mud-walled or thatched'), ('Mixed formal/informal', 'Mixed formal/informal'), ('Shack/Mokhukhu', 'Shack/Mokhukhu')], help_text='Indicate the primary type of housing used over the past 30 days', max_length=50, verbose_name='Housing type?  ')),
            ],
            options={
                'verbose_name': 'Maternal Demographics',
                'verbose_name_plural': 'Maternal Demographics',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalDiagnoses',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('form_as_json', models.TextField(editable=False, help_text='System field to save form.as_json. form.as_json should be called in modeladmin.save_model', null=True)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('new_diagnoses', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name="Have there been any new diagnoses or medical problems in the mother's health since last visit?")),
                ('diagnoses_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='if other specify...')),
                ('has_who_dx', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], max_length=3, verbose_name='During this pregnancy, did the mother have any new diagnoses listed in the WHO Adult/Adolescent HIV clinical staging document which  is/are NOT reported?')),
            ],
            options={
                'verbose_name': 'Maternal Diagnoses',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalDiagnosesList',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, help_text='(suggest 40 characters max.)', max_length=250, unique=True, verbose_name='Name')),
                ('short_name', models.CharField(db_index=True, help_text='This is the stored value, required', max_length=250, unique=True, verbose_name='Stored value')),
                ('display_index', models.IntegerField(db_index=True, default=0, help_text='Index to control display order if not alphabetical, not required', verbose_name='display index')),
                ('field_name', models.CharField(blank=True, editable=False, help_text='Not required', max_length=25, null=True)),
                ('version', models.CharField(default='1.0', editable=False, max_length=35)),
            ],
            options={
                'ordering': ['display_index', 'name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalEligibility',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('subject_identifier', models.CharField(max_length=50, verbose_name='Subject Identifier')),
                ('subject_identifier_as_pk', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('subject_identifier_aka', models.CharField(editable=False, help_text='track a previously allocated identifier.', max_length=50, null=True, verbose_name='Subject Identifier a.k.a')),
                ('slug', models.CharField(db_index=True, default='', editable=False, help_text='a field used for quick search', max_length=250, null=True)),
                ('eligibility_id', models.CharField(editable=False, max_length=36, unique=True, verbose_name='Eligibility Identifier')),
                ('report_datetime', models.DateTimeField(help_text='Date and time of assessing eligibility', validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date and Time')),
                ('age_in_years', models.IntegerField(verbose_name='What is the age of the participant?')),
                ('has_omang', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Do you have an OMANG?')),
                ('ineligibility', models.TextField(editable=False, max_length=150, null=True, verbose_name='Reason not eligible')),
                ('is_eligible', models.BooleanField(default=False, editable=False)),
                ('is_consented', models.BooleanField(default=False, editable=False)),
                ('has_passed_consent', models.BooleanField(default=False, editable=False)),
                ('registered_subject', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_registration.RegisteredSubject')),
                ('site', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site')),
            ],
            options={
                'verbose_name': 'Maternal Eligibility',
                'verbose_name_plural': 'Maternal Eligibility',
            },
        ),
        migrations.CreateModel(
            name='MaternalEligibilityLoss',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('report_datetime', models.DateTimeField(default=django.utils.timezone.now, help_text='Date and time of report.', verbose_name='Report Date and Time')),
                ('reason_ineligible', models.TextField(help_text='Gets reasons from Maternal Eligibility.ineligibility', max_length=500, verbose_name='Reason not eligible')),
                ('maternal_eligibility', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalEligibility')),
            ],
            options={
                'verbose_name': 'Maternal Eligibility Loss',
            },
        ),
        migrations.CreateModel(
            name='MaternalHivInterimHx',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('form_as_json', models.TextField(editable=False, help_text='System field to save form.as_json. form.as_json should be called in modeladmin.save_model', null=True)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('has_cd4', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='During this pregnancy did the mother have at least one CD4 count performed (outside the study)? ')),
                ('cd4_date', models.DateField(blank=True, null=True, verbose_name='Date of most recent CD4 test? ')),
                ('cd4_result', models.CharField(blank=True, max_length=35, null=True, verbose_name='Result of most recent CD4 test')),
                ('has_vl', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text="(if 'YES' continue. Otherwise go to question 9)", max_length=3, verbose_name='During this pregnancy did the mother have a viral load perfomed (outside the study)? ')),
                ('vl_date', models.DateField(blank=True, null=True, verbose_name='If yes, Date of most recent VL test? ')),
                ('vl_detectable', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', max_length=3, verbose_name='Was the viral load detectable?')),
                ('vl_result', models.CharField(blank=True, max_length=35, null=True, verbose_name='Result of most recent VL test')),
                ('comment', models.TextField(blank=True, max_length=250, null=True, verbose_name='Comment if any additional pertinent information ')),
            ],
            options={
                'verbose_name': 'Maternal Hiv Interim Hx',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalHospitalization',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, help_text='(suggest 40 characters max.)', max_length=250, unique=True, verbose_name='Name')),
                ('short_name', models.CharField(db_index=True, help_text='This is the stored value, required', max_length=250, unique=True, verbose_name='Stored value')),
                ('display_index', models.IntegerField(db_index=True, default=0, help_text='Index to control display order if not alphabetical, not required', verbose_name='display index')),
                ('field_name', models.CharField(blank=True, editable=False, help_text='Not required', max_length=25, null=True)),
                ('version', models.CharField(default='1.0', editable=False, max_length=35)),
            ],
            options={
                'ordering': ['display_index', 'name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalInterimIdcc',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('form_as_json', models.TextField(editable=False, help_text='System field to save form.as_json. form.as_json should be called in modeladmin.save_model', null=True)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('info_since_lastvisit', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name='Is there new laboratory information available on the mother since last visit')),
                ('recent_cd4', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Most recent CD4 available')),
                ('recent_cd4_date', models.DateField(blank=True, null=True, verbose_name='Date of recent CD4')),
                ('value_vl_size', models.CharField(blank=True, choices=[('equal', '='), ('less_than', '<'), ('greater_than', '>')], max_length=25, null=True, verbose_name='Is the value for the most recent VL available “=” ,“<”, or “>” a number? ')),
                ('value_vl', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Value of VL ')),
                ('recent_vl_date', models.DateField(blank=True, null=True, verbose_name='Date of recent VL')),
                ('other_diagnoses', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=25, null=True, verbose_name='Please specify any other diagnoses found in the IDCC since the last visit ')),
            ],
            options={
                'verbose_name': 'Maternal Interim Idcc Data',
                'verbose_name_plural': 'Maternal Interim Idcc Data',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalLabourDel',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('report_datetime', models.DateTimeField(validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report date')),
                ('delivery_datetime', models.DateTimeField(help_text='If TIME unknown, estimate', validators=[edc_base.model_validators.date.datetime_not_future], verbose_name='Date and time of delivery :')),
                ('delivery_time_estimated', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Is the delivery TIME estimated?')),
                ('delivery_hospital', models.CharField(choices=[('PMH', 'Gaborone(PMH)'), ('G.West Clinic', 'G.West Clinic'), ('BH3 Clinic', 'BH3 Clinic'), ('Lesirane', 'Lesirane Clinic'), ('Old Naledi', 'Old Naledi'), ('Mafitlhakgosi', 'Mafitlhakgosi'), ('OTHER', 'Other health facilities not associated with study site')], help_text="If 'OTHER', specify below", max_length=65, verbose_name='Place of delivery? ')),
                ('delivery_hospital_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('labour_hrs', models.CharField(max_length=10, verbose_name='How long prior to to delivery, in HRS, did labour begin? ')),
                ('mode_delivery', models.CharField(choices=[('spontaneous vaginal', 'spontaneous vaginal'), ('vaginal forceps', 'vaginal forceps'), ('elective c-section', 'elective C-section'), ('emergent c-section', 'emrgent C-section'), ('OTHER', 'Other delivery mode not listed above')], help_text="If 'OTHER', specify below", max_length=100, verbose_name='What was the mode of delivery?')),
                ('mode_delivery_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('csection_reason', models.CharField(choices=[('N/A', 'Not Applicable'), ('arrest', 'Arrest'), ('non-reassuring fetal fetal heart rate', 'Non-reassuring fetal heart rate'), ('malpresentation/breeech fetus', 'Malpresentation/breech fetus'), ('interruption of hiv transmission', 'Interruption of HIV transmission'), ('failure to progress/descend', 'Failue to progress/descend'), ('fetal anomaly', 'Fetal anomaly'), ('OTHER', 'Other reason for csection not listed above.')], help_text="If 'OTHER', specify below", max_length=100, verbose_name='If C-section was performed, indicate reason below')),
                ('csection_reason_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('delivery_complications_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('live_infants_to_register', models.IntegerField(verbose_name='How many babies are you registering to the study? ')),
                ('still_births', models.IntegerField(default=0, verbose_name='How many still births or miscarriages?')),
                ('valid_regiment_duration', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], help_text='If not 4 or more weeks then participant will go OFF STUDY.', max_length=15, null=True, verbose_name='(Interviewer) If HIV+ve, has the participant been on the ART regimen for at least 4 weeks in pregnancy?')),
                ('arv_initiation_date', models.DateField(blank=True, null=True, verbose_name='(Interviewer) If on ART, when did the participant initiate therapy for this pregnancy?')),
                ('delivery_comment', models.TextField(blank=True, max_length=250, null=True, verbose_name='List any additional information about the labour and delivery (mother only) ')),
                ('comment', models.TextField(blank=True, max_length=250, null=True, verbose_name='Comment if any additional pertinent information ')),
                ('delivery_complications', models.ManyToManyField(help_text="If 'OTHER', specify below", to='td_maternal.DeliveryComplications', verbose_name='Were any of the following complications present at delivery? ')),
                ('registered_subject', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_registration.RegisteredSubject')),
            ],
            options={
                'verbose_name': 'Delivery',
            },
        ),
        migrations.CreateModel(
            name='MaternalLifetimeArvHistory',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('form_as_json', models.TextField(editable=False, help_text='System field to save form.as_json. form.as_json should be called in modeladmin.save_model', null=True)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('prev_preg_azt', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], max_length=25, verbose_name='Did she ever receive AZT monotherapy in a previous pregnancy?  ')),
                ('prev_sdnvp_labour', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], max_length=25, verbose_name='Did she ever receive single-dose NVP in labour during a previous pregnancy?')),
                ('prev_preg_haart', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], max_length=25, verbose_name='Did she ever receive triple antiretrovirals during a prior pregnancy?')),
                ('haart_start_date', models.DateField(blank=True, null=True, verbose_name='Date of triple antiretrovirals first started')),
                ('is_date_estimated', edc_base.model_fields.date_estimated.IsDateEstimatedField(blank=True, choices=[('-', 'No'), ('D', 'Yes, estimated the Day'), ('MD', 'Yes, estimated Month and Day'), ('YMD', 'Yes, estimated Year, Month and Day')], help_text='If the exact date is not known, please indicate which part of the date is estimated.', max_length=25, null=True, verbose_name="Is the subject's date of triple antiretrovirals estimated?")),
                ('preg_on_haart', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name='Was she still on triple antiretrovirals at the time she became pregnant for this pregnancy? ')),
                ('haart_changes', models.IntegerField(help_text='If there was no change please enter 0.', validators=[django.core.validators.MinValueValidator(0)], verbose_name='How many times did you change your triple antiretrovirals medicines?')),
                ('prior_preg', models.CharField(choices=[('continuous', 'Received continuous HAART from the time she started'), ('restarted', 'Had treatment interruption but restarted HAART prior to this pregnancy'), ('stopped', 'Had treatment interruption and never restarted HAART prior to this pregnancy'), ('N/A', 'Not Applicable')], max_length=80, verbose_name='Prior to this pregnancy the mother has ')),
                ('prior_arv_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='if other specify...')),
            ],
            options={
                'verbose_name': 'Maternal ARV Lifetime History',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalMedicalHistory',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('form_as_json', models.TextField(editable=False, help_text='System field to save form.as_json. form.as_json should be called in modeladmin.save_model', null=True)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('chronic_since', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name='Does the mother have any significant chronic condition(s) thatwere diagnosed prior to the current pregnancy and that remain ongoing?')),
                ('who_diagnosis', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], help_text='Please use the WHO Staging Guidelines. ONLY for HIV infected mothers', max_length=25, verbose_name='Prior to the current pregnancy, was the participant ever diagnosed with a WHO Stage III or IV illness?')),
                ('mother_chronic_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='if other, specify.')),
                ('father_chronic_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='if other, specify.')),
                ('mother_medications_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='if other, specify.')),
                ('sero_posetive', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name='Is the mother HIV sero-positive?')),
                ('date_hiv_diagnosis', models.DateField(blank=True, help_text='EDD Confirmed. Derived variable, see AntenatalEnrollment.', null=True, verbose_name='If HIV sero-posetive, what is the approximate date of diagnosis?')),
                ('perinataly_infected', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], max_length=25, verbose_name='Was the mother peri-nataly infected with HIV?')),
                ('know_hiv_status', models.CharField(choices=[('Nobody', 'Nobody'), ('1 person', '1 person'), ('2-5 people', '2-5 people'), ('6-10 people', '6-10 people'), ('More than 10 people', 'More than 10 people'), ('dont know', 'I do not know'), ('N/A', 'Not applicable')], max_length=50, verbose_name='How many people know that you are HIV infected?')),
                ('lowest_cd4_known', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], max_length=4, verbose_name="Is the mother's lowest CD4 known?")),
                ('cd4_count', models.IntegerField(blank=True, null=True, verbose_name="What was the mother's lowest known (nadir) CD4 cell count(cells/mm3) at any time in the past?")),
                ('cd4_date', models.DateField(blank=True, help_text='Format is YYYY-MM-DD. Use 01 for Day', null=True, verbose_name='Year/Month of CD4 test ')),
                ('is_date_estimated', models.CharField(blank=True, choices=[('No', 'No'), ('Yes, estimated the Day', 'Yes, estimated the Day'), ('Yes, estimated Month and Day', 'Yes, estimated Month and Day'), ('Yes, estimated Year, Month and Day', 'Yes, estimated Year, Month and Day')], max_length=50, null=True, verbose_name="Is the subject's date of CD4 test estimated?")),
                ('comment', models.TextField(blank=True, max_length=250, null=True, verbose_name='Comments')),
                ('father_chronic', models.ManyToManyField(related_name='fathe', to='td_maternal.ChronicConditions', verbose_name="Does the father of the infant or the mother's other children have any of the above. Tick all that apply")),
            ],
            options={
                'verbose_name': 'Maternal Medical History',
                'verbose_name_plural': 'Maternal Medical History',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalMedications',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, help_text='(suggest 40 characters max.)', max_length=250, unique=True, verbose_name='Name')),
                ('short_name', models.CharField(db_index=True, help_text='This is the stored value, required', max_length=250, unique=True, verbose_name='Stored value')),
                ('display_index', models.IntegerField(db_index=True, default=0, help_text='Index to control display order if not alphabetical, not required', verbose_name='display index')),
                ('field_name', models.CharField(blank=True, editable=False, help_text='Not required', max_length=25, null=True)),
                ('version', models.CharField(default='1.0', editable=False, max_length=35)),
            ],
            options={
                'ordering': ['display_index', 'name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalObstericalHistory',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('form_as_json', models.TextField(editable=False, help_text='System field to save form.as_json. form.as_json should be called in modeladmin.save_model', null=True)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('prev_pregnancies', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Including this pregnancy, how many previous pregnancies for this participant?')),
                ('pregs_24wks_or_more', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Number of pregnancies at least 24 weeks?')),
                ('lost_before_24wks', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Number of pregnancies lost before 24 weeks gestation')),
                ('lost_after_24wks', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Number of pregnancies lost at or after 24 weeks gestation ')),
                ('live_children', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='How many other living children does the participant currently have (excluding baby to be enrolled in the study)')),
                ('children_died_b4_5yrs', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name="How many of the participant's children died after birth before 5 years of age? ")),
                ('children_deliv_before_37wks', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Number of previous prenancies delivered at < 37 weeks GA?')),
                ('children_deliv_aftr_37wks', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Number of previous prenancies delivered at >= 37 weeks GA?')),
            ],
            options={
                'verbose_name': 'Maternal Obsterical History',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalPostPartumDep',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('form_as_json', models.TextField(editable=False, help_text='System field to save form.as_json. form.as_json should be called in modeladmin.save_model', null=True)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('laugh', models.CharField(choices=[('As much as I always could', 'As much as I always could'), ('Not quite so much now', 'Not quite so much now'), ('Definitely not so much now', 'Definitely not so much now'), ('Not at all', 'Not at all')], max_length=75, verbose_name='In the past 7 days, I have been able to laugh and see the funny side of things?')),
                ('enjoyment', models.CharField(choices=[('As much as I ever did', 'As much as I ever did'), ('Rather less than I used to', 'Rather less than I used to'), ('Definitely less than I used to', 'Definitely less than I used to'), ('Hardly at all', 'Hardly at all')], max_length=75, verbose_name='In the past 7 days, I looked forward with enjoyment of things?')),
                ('blame', models.CharField(choices=[('Yes, most of the time', 'Yes, most of the time'), ('Yes, some of the time', 'Yes, some of the time'), ('Not very often', 'Not very often'), ('No, never', 'No, never')], max_length=75, verbose_name='In the past 7 days, I have blamed myself unnecessarily when things went wrong')),
                ('anxious', models.CharField(choices=[('No, not at all', 'No, not at all'), ('Hardly ever', 'Hardly ever'), ('Yes, sometimes', 'Yes, sometimes'), ('Yes, very often', 'Yes, very often')], max_length=75, verbose_name='In the past 7 days, I have anxious or worried for no good reason')),
                ('panick', models.CharField(choices=[('Yes, quite a lot', 'Yes, quite a lot'), ('Yes, sometimes', 'Yes, sometimes'), ('No, not much', 'No, not much'), ('No, not at all', 'No, not at all')], max_length=75, verbose_name='In the past 7 days, I have felt scared or panicky for no good reason')),
                ('top', models.CharField(choices=[("Yes, most of the time I haven't been able to cope at all", "Yes, most of the time I haven't been able to cope at all"), ("Yes, sometimes I haven't been coping as well as usual", "Yes, sometimes I haven't been coping as well as usual"), ('No, most of the time I have coped quite well', 'No, most of the time I have coped quite well'), ('No, I have been coping as well as ever', 'No, I have been coping as well as ever')], max_length=75, verbose_name='In the past 7 days, things have been getting on top of me')),
                ('unhappy', models.CharField(choices=[('Yes, most of the time', 'Yes, most of the time'), ('Yes, some of the time', 'Yes, some of the time'), ('Not very often', 'Not very often'), ('No, never', 'No, never')], max_length=75, verbose_name='In the past 7 days, I have been so unhappy that I have had difficulty sleeping')),
                ('sad', models.CharField(choices=[('Yes, most of the time', 'Yes, most of the time'), ('Yes, some of the time', 'Yes, some of the time'), ('Not very often', 'Not very often'), ('No, never', 'No, never')], max_length=75, verbose_name='In the past 7 days, I have felt sad or miserable')),
                ('crying', models.CharField(choices=[('Yes, most of the time', 'Yes, most of the time'), ('Yes, quite often', 'Yes, quite often'), ('Only occasionally', 'Only occasionally'), ('No, never', 'No, never')], max_length=75, verbose_name='In the past 7 days, I have been so unhappy that I have been crying')),
                ('self_harm', models.CharField(choices=[('Yes, quite often', 'Yes, quite often'), ('Sometimes', 'Sometimes'), ('Hardly ever', 'Hardly ever'), ('Never', 'Never')], max_length=75, verbose_name='In the past 7 days, the thought of harming myself has occured to me')),
            ],
            options={
                'verbose_name': 'Maternal Post Partum: Depression',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalPostPartumFu',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('form_as_json', models.TextField(editable=False, help_text='System field to save form.as_json. form.as_json should be called in modeladmin.save_model', null=True)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('new_diagnoses', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name="Have there been any new diagnoses or medical problems in the mother's health since last visit?")),
                ('diagnoses_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='if other specify...')),
                ('has_who_dx', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], max_length=3, verbose_name='During this pregnancy, did the mother have any new diagnoses listed in the WHO Adult/Adolescent HIV clinical staging document which  is/are NOT reported?')),
                ('hospitalized', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name='Has the mother been hospitalized since the last study visit?')),
                ('hospitalization_reason_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='if other specify...')),
                ('hospitalization_days', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='How many days was the mother hospitalized?')),
                ('diagnoses', models.ManyToManyField(blank=True, to='td_maternal.MaternalDiagnosesList', verbose_name='Have any of the following diagnoses occured since last visit?')),
                ('hospitalization_reason', models.ManyToManyField(blank=True, to='td_maternal.MaternalHospitalization', verbose_name='Was the hospitalization for any of the following reasons?')),
            ],
            options={
                'verbose_name': 'Maternal Post Partum Fu',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalRando',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('form_as_json', models.TextField(editable=False, help_text='System field to save form.as_json. form.as_json should be called in modeladmin.save_model', null=True)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('site', models.CharField(max_length=15, verbose_name='Site')),
                ('sid', models.IntegerField(unique=True, verbose_name='SID')),
                ('rx', django_crypto_fields.fields.encrypted_char_field.EncryptedCharField(blank=True, help_text=' (Encryption: RSA local)', max_length=71, verbose_name='Treatment Assignment')),
                ('subject_identifier', models.CharField(max_length=16, verbose_name='Subject Identifier')),
                ('randomization_datetime', models.DateTimeField(verbose_name='Randomization Datetime')),
                ('initials', django_crypto_fields.fields.encrypted_char_field.EncryptedCharField(blank=True, help_text=' (Encryption: RSA local)', max_length=71, validators=[django.core.validators.RegexValidator(message='Ensure initials consist of letters only in upper case, no spaces.', regex='^[A-Z]{2,3}$')])),
                ('dispensed', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', help_text='To be confirmed by pharmacy staff only', max_length=10, verbose_name='Dispensed')),
                ('comment', models.TextField(blank=True, help_text='Comment if any manual changes made to rando list', max_length=250, null=True)),
                ('delivery_clinic', models.CharField(choices=[('PMH', 'Gaborone(PMH)'), ('G.West Clinic', 'G.West Clinic'), ('BH3 Clinic', 'BH3 Clinic'), ('Lesirane', 'Lesirane Clinic'), ('Old Naledi', 'Old Naledi'), ('Mafitlhakgosi', 'Mafitlhakgosi'), ('OTHER', 'Other health facilities not associated with study site')], max_length=100, verbose_name='Which clinic does the mother plan to deliver at?')),
                ('delivery_clinic_other', models.CharField(blank=True, max_length=100, null=True, verbose_name='if other delivery clinic, specify...')),
            ],
            options={
                'verbose_name': 'Maternal Randomization',
                'verbose_name_plural': 'Maternal Randomization',
                'ordering': ('sid',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalRelatives',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, help_text='(suggest 40 characters max.)', max_length=250, unique=True, verbose_name='Name')),
                ('short_name', models.CharField(db_index=True, help_text='This is the stored value, required', max_length=250, unique=True, verbose_name='Stored value')),
                ('display_index', models.IntegerField(db_index=True, default=0, help_text='Index to control display order if not alphabetical, not required', verbose_name='display index')),
                ('field_name', models.CharField(blank=True, editable=False, help_text='Not required', max_length=25, null=True)),
                ('version', models.CharField(default='1.0', editable=False, max_length=35)),
            ],
            options={
                'ordering': ['display_index', 'name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalSubstanceUseDuringPreg',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('form_as_json', models.TextField(editable=False, help_text='System field to save form.as_json. form.as_json should be called in modeladmin.save_model', null=True)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('smoked_during_pregnancy', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Has the participant ever smoked cigarettes during this pregnancy?  ')),
                ('smoking_during_preg_freq', models.CharField(blank=True, choices=[('daily', 'Daily'), ('once every few days', 'Once every few days'), ('weekly', 'Weekly'), ('2-3 times per month or less', '2-3 times per month or less')], max_length=30, null=True, verbose_name='If yes, please indicate how much: ')),
                ('alcohol_during_pregnancy', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Has the participant ever drank alcohol during this pregnancy?')),
                ('alcohol_during_preg_freq', models.CharField(blank=True, choices=[('daily', 'Daily'), ('once every few days', 'Once every few days'), ('weekly', 'Weekly'), ('2-3 times per month or less', '2-3 times per month or less')], max_length=30, null=True, verbose_name='If yes, please indicate how much: ')),
                ('marijuana_during_preg', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Has the participant ever used marijuana during this pregnancy?')),
                ('marijuana_during_preg_freq', models.CharField(blank=True, choices=[('daily', 'Daily'), ('once every few days', 'Once every few days'), ('weekly', 'Weekly'), ('2-3 times per month or less', '2-3 times per month or less')], max_length=30, null=True, verbose_name='If yes, please indicate how much: ')),
                ('other_illicit_substances_during_preg', models.TextField(blank=True, max_length=500, null=True, verbose_name='Please list any other illicit substances that the participant reports using during to this pregnancy.')),
            ],
            options={
                'verbose_name': 'Maternal Substance Use During Pregnancy',
                'verbose_name_plural': 'Maternal Substance Use During Pregnancy',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalSubstanceUsePriorPreg',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('form_as_json', models.TextField(editable=False, help_text='System field to save form.as_json. form.as_json should be called in modeladmin.save_model', null=True)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('smoked_prior_to_preg', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Has the participant ever smoked cigarettes prior to this pregnancy?')),
                ('smoking_prior_preg_freq', models.CharField(blank=True, choices=[('daily', 'Daily'), ('once every few days', 'Once every few days'), ('weekly', 'Weekly'), ('2-3 times per month or less', '2-3 times per month or less')], max_length=30, null=True, verbose_name='If yes, please indicate how much: ')),
                ('alcohol_prior_pregnancy', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Has the participant ever drank alcohol prior to this pregnancy?')),
                ('alcohol_prior_preg_freq', models.CharField(blank=True, choices=[('daily', 'Daily'), ('once every few days', 'Once every few days'), ('weekly', 'Weekly'), ('2-3 times per month or less', '2-3 times per month or less')], max_length=30, null=True, verbose_name='If yes, please indicate how much: ')),
                ('marijuana_prior_preg', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Has the participant ever used marijuana prior to this pregnancy?')),
                ('marijuana_prior_preg_freq', models.CharField(blank=True, choices=[('daily', 'Daily'), ('once every few days', 'Once every few days'), ('weekly', 'Weekly'), ('2-3 times per month or less', '2-3 times per month or less')], max_length=30, null=True, verbose_name='If yes, please indicate how much: ')),
                ('other_illicit_substances_prior_preg', models.CharField(blank=True, max_length=500, null=True, verbose_name='Please list any other illicit substances that the participant reports using prior to this pregnancy.')),
            ],
            options={
                'verbose_name': 'Substance Use Prior to Pregnancy',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaternalUltraSoundInitial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bpd', models.DecimalField(decimal_places=2, help_text='Units in cm.', max_digits=6, validators=[td_maternal.validators.validate_bpd], verbose_name='BPD?')),
                ('hc', models.DecimalField(decimal_places=2, help_text='Units in cm.', max_digits=6, validators=[td_maternal.validators.validate_hc], verbose_name='HC?')),
                ('ac', models.DecimalField(decimal_places=2, help_text='Units in cm.', max_digits=6, validators=[td_maternal.validators.validate_ac], verbose_name='AC?')),
                ('fl', models.DecimalField(decimal_places=2, help_text='Units in cm.', max_digits=6, validators=[td_maternal.validators.validate_fl], verbose_name='FL?')),
                ('amniotic_fluid_volume', models.CharField(choices=[('0', 'Normal'), ('1', 'Abnormal')], max_length=10, verbose_name='Amniotic fluid volume?')),
                ('number_of_gestations', models.CharField(choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3')], help_text='If number is not equal to 1, then participant goes off study.', max_length=3, verbose_name='Number of viable gestations seen?')),
                ('ga_by_lmp', models.IntegerField(blank=True, help_text='Units in weeks. Derived variable, see AntenatalEnrollment.', null=True, verbose_name='GA by LMP at ultrasound date')),
                ('ga_by_ultrasound_wks', models.IntegerField(help_text='Units in weeks.', validators=[td_maternal.validators.validate_ga_by_ultrasound], verbose_name='GA by ultrasound in weeks')),
                ('ga_by_ultrasound_days', models.IntegerField(help_text='must be less than 7days.', verbose_name='GA by ultrasound days offset')),
                ('est_fetal_weight', models.DecimalField(decimal_places=2, help_text='Units in grams.', max_digits=8, validators=[td_maternal.validators.validate_fetal_weight], verbose_name='Estimated fetal weight')),
                ('est_edd_ultrasound', models.DateField(help_text='EDD', validators=[edc_base.model_validators.date.date_is_future], verbose_name='Estimated date of delivery by ultrasound')),
                ('edd_confirmed', models.DateField(help_text='EDD Confirmed. Derived variable, see AntenatalEnrollment.', verbose_name='EDD Confirmed.')),
                ('ga_confirmed', models.IntegerField(help_text='Derived variable.', verbose_name='GA confirmed.')),
                ('ga_confrimation_method', models.CharField(choices=[('0', '0'), ('1', '1')], help_text='0=EDD Confirmed by edd_by_lmp, 1=EDD Confirmed by edd_by_ultrasound.', max_length=3, verbose_name='The method used to derive edd_confirmed.')),
            ],
            options={
                'verbose_name': 'Maternal Ultra Sound Initial',
            },
        ),
        migrations.CreateModel(
            name='MaternalVisit',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('subject_identifier', models.CharField(max_length=50, verbose_name='Subject Identifier')),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('visit_schedule_name', models.CharField(editable=False, help_text='the name of the visit schedule used to find the "schedule"', max_length=25)),
                ('schedule_name', models.CharField(editable=False, max_length=25)),
                ('visit_code', models.CharField(editable=False, max_length=25, null=True)),
                ('visit_code_sequence', models.IntegerField(blank=True, default=0, help_text='An integer to represent the sequence of additional appointments relative to the base appointment, 0, needed to complete data collection for the timepoint. (NNNN.0)', null=True, verbose_name='Sequence')),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text='Date and time of this report', validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Visit Date and Time')),
                ('reason_unscheduled_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=25, null=True, verbose_name='If "Other" reason for unscheduled visit, specify')),
                ('reason_missed', models.CharField(blank=True, max_length=35, null=True, verbose_name="If 'Missed' above, provide the reason the scheduled visit was missed")),
                ('reason_missed_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=25, null=True, verbose_name='If "Other" reason for missed visit, specify')),
                ('study_status', models.CharField(max_length=50, null=True, verbose_name="What is the participant's current study status")),
                ('require_crfs', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=10, verbose_name='Are scheduled data being submitted with this visit?')),
                ('info_source_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If "Other" source of information, specify')),
                ('survival_status', models.CharField(choices=[('alive', 'Alive'), ('dead', 'Deceased'), ('unknown', 'Unknown')], default='alive', max_length=10, null=True, verbose_name="Participant's survival status")),
                ('last_alive_date', models.DateField(blank=True, null=True, validators=[edc_protocol.validators.date_not_before_study_start, edc_base.model_validators.date.date_not_future], verbose_name='Date participant last known alive')),
                ('comments', models.TextField(blank=True, max_length=250, null=True, verbose_name='Comment if any additional pertinent information about the participant')),
                ('reason', models.CharField(choices=[('scheduled', 'Scheduled visit/contact'), ('missed', 'Missed Scheduled visit'), ('unscheduled', 'Unscheduled visit at which lab samples or data are being submitted'), ('lost', 'Lost to follow-up (use only when taking subject off study)'), ('failed eligibility', 'Subject failed enrollment eligibility'), ('completed protocol', 'Subject has completed the study')], max_length=25, verbose_name='What is the reason for this visit report?')),
                ('reason_unscheduled', models.CharField(choices=[('Routine oncology', 'Routine oncology clinic visit'), ('Ill oncology', 'Ill oncology clinic visit'), ('Patient called', 'Patient called to come for visit'), ('OTHER', 'Other, specify:')], default='N/A', max_length=25, verbose_name="If 'Unscheduled' above, provide reason for the unscheduled visit")),
                ('info_source', models.CharField(choices=[('participant', 'Clinic visit with participant'), ('other_contact', 'Other contact with participant (for example telephone call)'), ('other_doctor', 'Contact with external health care provider/medical doctor'), ('family', 'Contact with family or designated person who can provide information'), ('chart', 'Hospital chart or other medical record'), ('OTHER', 'Other')], max_length=25, verbose_name='What is the main source of this information?')),
                ('appointment', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='edc_appointment.Appointment')),
                ('site', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site')),
            ],
            options={
                'verbose_name': 'Maternal Visit',
                'ordering': ('subject_identifier', 'visit_schedule_name', 'schedule_name', 'visit_code', 'visit_code_sequence', 'report_datetime'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PriorArv',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, help_text='(suggest 40 characters max.)', max_length=250, unique=True, verbose_name='Name')),
                ('short_name', models.CharField(db_index=True, help_text='This is the stored value, required', max_length=250, unique=True, verbose_name='Stored value')),
                ('display_index', models.IntegerField(db_index=True, default=0, help_text='Index to control display order if not alphabetical, not required', verbose_name='display index')),
                ('field_name', models.CharField(blank=True, editable=False, help_text='Not required', max_length=25, null=True)),
                ('version', models.CharField(default='1.0', editable=False, max_length=35)),
            ],
            options={
                'ordering': ['display_index', 'name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RapidTestResult',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('form_as_json', models.TextField(editable=False, help_text='System field to save form.as_json. form.as_json should be called in modeladmin.save_model', null=True)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('rapid_test_done', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Was a rapid test processed?')),
                ('result_date', models.DateField(verbose_name='Date of rapid test')),
                ('result', models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('IND', 'Indeterminate')], max_length=15, verbose_name='What is the rapid test result?')),
                ('comments', models.CharField(blank=True, max_length=250, null=True, verbose_name='Comment')),
                ('maternal_visit', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalVisit')),
                ('site', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site')),
            ],
            options={
                'verbose_name': 'Rapid Test Result',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpecimenConsent',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('may_store_genetic_samples', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, verbose_name='Does the participant agree that a portion of the blood sample that is taken be stored for genetic analysis?')),
                ('may_store_samples', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Does the participant agree to have samples stored after the study has ended')),
                ('is_incarcerated', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text="( if 'Yes' STOP participant cannot be consented )", max_length=3, null=True, validators=[edc_consent.validators.eligible_if_no], verbose_name='Is the participant under involuntary incarceration?')),
                ('is_literate', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text="If 'No' provide witness's name on this form and signature on the paper document.", max_length=3, verbose_name='Is the participant literate?')),
                ('witness_name', django_crypto_fields.fields.lastname_field.LastnameField(blank=True, help_text="Required only if participant is illiterate.<br>Format is 'LASTNAME, FIRSTNAME'. All uppercase separated by a comma. (Encryption: RSA local)", max_length=71, null=True, validators=[edc_consent.validators.FullNameValidator()], verbose_name="Witness's last and first name")),
                ('language', models.CharField(choices=[('af', 'Afrikaans'), ('ny', 'Chichewa'), ('en', 'English'), ('xh', 'isiXhosa'), ('lg', 'Luganda'), ('rny', 'Runyankore'), ('tn', 'Setswana'), ('sn', 'Shona')], help_text='The language used for the consent process will also be used during data collection.', max_length=25, verbose_name='Language of consent')),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('registered_subject', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='edc_registration.RegisteredSubject')),
            ],
            options={
                'verbose_name': 'Specimen Consent',
            },
        ),
        migrations.CreateModel(
            name='SubjectConsent',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('subject_identifier', models.CharField(max_length=50, verbose_name='Subject Identifier')),
                ('subject_identifier_as_pk', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('subject_identifier_aka', models.CharField(editable=False, help_text='track a previously allocated identifier.', max_length=50, null=True, verbose_name='Subject Identifier a.k.a')),
                ('citizen', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Is the participant a Botswana citizen? ')),
                ('legal_marriage', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', help_text="If 'No', participant may not be consented.", max_length=3, null=True, verbose_name='If not a citizen, is the participant legally married to a Botswana citizen?')),
                ('marriage_certificate', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'Not applicable')], default='N/A', help_text="If 'No', participant may not be consented.", max_length=3, null=True, verbose_name='[Interviewer] Has the participant produced the marriage certificate as proof? ')),
                ('marriage_certificate_no', models.CharField(blank=True, help_text='e.g. 000/YYYY', max_length=9, null=True, verbose_name='What is the marriage certificate number?')),
                ('identity', django_crypto_fields.fields.identity_field.IdentityField(help_text=' (Encryption: RSA local)', max_length=71, verbose_name='Identity number')),
                ('identity_type', models.CharField(max_length=25, verbose_name='What type of identity number is this?')),
                ('confirm_identity', django_crypto_fields.fields.identity_field.IdentityField(help_text='Retype the identity number (Encryption: RSA local)', max_length=71, null=True)),
                ('first_name', django_crypto_fields.fields.firstname_field.FirstnameField(blank=True, help_text=' (Encryption: RSA local)', max_length=71, null=True)),
                ('last_name', django_crypto_fields.fields.lastname_field.LastnameField(blank=True, help_text=' (Encryption: RSA local)', max_length=71, null=True, verbose_name='Last name')),
                ('initials', django_crypto_fields.fields.encrypted_char_field.EncryptedCharField(blank=True, help_text=' (Encryption: RSA local)', max_length=71, null=True, validators=[django.core.validators.RegexValidator(message='Ensure initials consist of letters only in upper case, no spaces.', regex='^[A-Z]{2,3}$')])),
                ('dob', models.DateField(null=True, verbose_name='Date of birth')),
                ('is_dob_estimated', edc_base.model_fields.date_estimated.IsDateEstimatedField(choices=[('-', 'No'), ('D', 'Yes, estimated the Day'), ('MD', 'Yes, estimated Month and Day'), ('YMD', 'Yes, estimated Year, Month and Day')], help_text='If the exact date is not known, please indicate which part of the date is estimated.', max_length=25, null=True, verbose_name='Is date of birth estimated?')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('U', 'Undetermined')], max_length=1, null=True, verbose_name='Gender')),
                ('guardian_name', django_crypto_fields.fields.lastname_field.LastnameField(blank=True, help_text="Required only if participant is a minor.<BR>Format is 'LASTNAME, FIRSTNAME'. All uppercase separated by a comma. (Encryption: RSA local)", max_length=71, null=True, validators=[edc_consent.validators.FullNameValidator()], verbose_name="Guardian's last and first name")),
                ('subject_type', models.CharField(max_length=25)),
                ('consent_reviewed', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='If no, participant is not eligible.', max_length=3, null=True, validators=[edc_consent.validators.eligible_if_yes], verbose_name='I have reviewed the consent with the participant')),
                ('study_questions', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='If no, participant is not eligible.', max_length=3, null=True, validators=[edc_consent.validators.eligible_if_yes], verbose_name='I have answered all questions the participant had about the study')),
                ('assessment_score', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='If no, participant is not eligible.', max_length=3, null=True, validators=[edc_consent.validators.eligible_if_yes], verbose_name='I have asked the participant questions about this study and the participant has demonstrated understanding')),
                ('consent_signature', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='If no, participant is not eligible.', max_length=3, null=True, validators=[edc_consent.validators.eligible_if_yes], verbose_name='I have verified that the participant has signed the consent form')),
                ('consent_copy', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('Declined', 'Yes, but subject declined copy')], help_text='If declined, return copy with the consent', max_length=20, null=True, validators=[edc_consent.validators.eligible_if_yes_or_declined], verbose_name='I have provided the participant with a copy of their signed informed consent')),
                ('is_incarcerated', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text="( if 'Yes' STOP participant cannot be consented )", max_length=3, null=True, validators=[edc_consent.validators.eligible_if_no], verbose_name='Is the participant under involuntary incarceration?')),
                ('is_literate', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text="If 'No' provide witness's name on this form and signature on the paper document.", max_length=3, verbose_name='Is the participant literate?')),
                ('witness_name', django_crypto_fields.fields.lastname_field.LastnameField(blank=True, help_text="Required only if participant is illiterate.<br>Format is 'LASTNAME, FIRSTNAME'. All uppercase separated by a comma. (Encryption: RSA local)", max_length=71, null=True, validators=[edc_consent.validators.FullNameValidator()], verbose_name="Witness's last and first name")),
                ('language', models.CharField(choices=[('af', 'Afrikaans'), ('ny', 'Chichewa'), ('en', 'English'), ('xh', 'isiXhosa'), ('lg', 'Luganda'), ('rny', 'Runyankore'), ('tn', 'Setswana'), ('sn', 'Shona')], help_text='The language used for the consent process will also be used during data collection.', max_length=25, verbose_name='Language of consent')),
                ('is_verified', models.BooleanField(default=False, editable=False)),
                ('is_verified_datetime', models.DateTimeField(editable=False, null=True)),
                ('verified_by', models.CharField(editable=False, max_length=25, null=True)),
                ('consent_datetime', models.DateTimeField(validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Consent date and time')),
                ('report_datetime', models.DateTimeField(editable=False, null=True)),
                ('version', models.CharField(editable=False, help_text="See 'Consent Type' for consent versions by period.", max_length=10, verbose_name='Consent version')),
                ('updates_versions', models.BooleanField(default=False)),
                ('sid', models.CharField(blank=True, editable=False, help_text='Used for randomization against a prepared rando-list.', max_length=15, null=True, verbose_name='SID')),
                ('comment', django_crypto_fields.fields.encrypted_text_field.EncryptedTextField(blank=True, help_text=' (Encryption: AES local)', max_length=250, null=True, verbose_name='Comment')),
                ('dm_comment', models.CharField(editable=False, help_text='see also edc.data manager.', max_length=150, null=True, verbose_name='Data Management comment')),
                ('consent_identifier', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A unique identifier for this consent instance')),
                ('slug', models.CharField(db_index=True, default='', editable=False, help_text='a field used for quick search', max_length=250, null=True)),
                ('recruit_source', models.CharField(choices=[('ANC clinic staff', 'ANC clinic staff'), ('BHP recruiter/clinician', 'BHP recruiter/clinician'), ('OTHER', 'Other, specify')], max_length=75, verbose_name='The mother first learned about the tshilo dikotla study from ')),
                ('recruit_source_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='if other recruitment source, specify...')),
                ('recruitment_clinic', models.CharField(choices=[('PMH', 'Gaborone(PMH)'), ('G.West Clinic', 'G.West Clinic'), ('BH3 Clinic', 'BH3 Clinic'), ('Ext2', 'Extension 2 Clinic'), ('Nkoyaphiri', 'Nkoyaphiri Clinic'), ('Lesirane', 'Lesirane Clinic'), ('Old Naledi', 'Old Naledi'), ('Mafitlhakgosi', 'Mafitlhakgosi'), ('OTHER', 'Other health facilities not associated with study site')], max_length=100, verbose_name='The mother was recruited from')),
                ('recruitment_clinic_other', models.CharField(blank=True, max_length=100, null=True, verbose_name='if other recruitment clinic, specify...')),
                ('maternal_eligibility', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalEligibility')),
                ('site', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site')),
            ],
            options={
                'verbose_name': 'Maternal Consent',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('on_site', edc_base.sites.managers.CurrentSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='TdConsentVersion',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('version', models.CharField(choices=[('1', 'Consent version 1'), ('3', 'Consent version 3')], max_length=3, verbose_name='Which version of the consent would you like to be consented with.')),
                ('report_datetime', models.DateField(blank=True, null=True, validators=[edc_protocol.validators.date_not_before_study_start, edc_base.model_validators.date.date_not_future], verbose_name='Report datetime.')),
                ('maternal_eligibility', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalEligibility')),
            ],
            options={
                'verbose_name': 'TD Consent Version',
                'verbose_name_plural': 'TD Consent Version',
            },
        ),
        migrations.CreateModel(
            name='WcsDxAdult',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, help_text='(suggest 40 characters max.)', max_length=250, unique=True, verbose_name='Name')),
                ('short_name', models.CharField(db_index=True, help_text='This is the stored value, required', max_length=250, unique=True, verbose_name='Stored value')),
                ('display_index', models.IntegerField(db_index=True, default=0, help_text='Index to control display order if not alphabetical, not required', verbose_name='display index')),
                ('field_name', models.CharField(blank=True, editable=False, help_text='Not required', max_length=25, null=True)),
                ('version', models.CharField(default='1.0', editable=False, max_length=35)),
            ],
            options={
                'ordering': ['display_index', 'name'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='maternalsubstanceusepriorpreg',
            name='maternal_visit',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalVisit'),
        ),
        migrations.AddField(
            model_name='maternalsubstanceusepriorpreg',
            name='site',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='maternalsubstanceuseduringpreg',
            name='maternal_visit',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalVisit'),
        ),
        migrations.AddField(
            model_name='maternalsubstanceuseduringpreg',
            name='site',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='maternalrando',
            name='maternal_visit',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalVisit'),
        ),
        migrations.AddField(
            model_name='maternalpostpartumfu',
            name='maternal_visit',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalVisit'),
        ),
        migrations.AddField(
            model_name='maternalpostpartumfu',
            name='site',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='maternalpostpartumfu',
            name='who',
            field=models.ManyToManyField(to='td_maternal.WcsDxAdult', verbose_name='List any new WHO Stage III/IV diagnoses that are not reported in the Question above:'),
        ),
        migrations.AddField(
            model_name='maternalpostpartumdep',
            name='maternal_visit',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalVisit'),
        ),
        migrations.AddField(
            model_name='maternalpostpartumdep',
            name='site',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='maternalobstericalhistory',
            name='maternal_visit',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalVisit'),
        ),
        migrations.AddField(
            model_name='maternalobstericalhistory',
            name='site',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='maternalmedicalhistory',
            name='maternal_visit',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalVisit'),
        ),
        migrations.AddField(
            model_name='maternalmedicalhistory',
            name='mother_chronic',
            field=models.ManyToManyField(related_name='mother', to='td_maternal.ChronicConditions', verbose_name='Does the mother have any of the above. Tick all that apply'),
        ),
        migrations.AddField(
            model_name='maternalmedicalhistory',
            name='mother_medications',
            field=models.ManyToManyField(to='td_maternal.MaternalMedications', verbose_name='Does the mother currently take any of the above medications. Tick all that apply'),
        ),
        migrations.AddField(
            model_name='maternalmedicalhistory',
            name='site',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='maternalmedicalhistory',
            name='who',
            field=models.ManyToManyField(to='td_maternal.WcsDxAdult', verbose_name='List any new WHO Stage III/IV diagnoses that are not reported'),
        ),
        migrations.AddField(
            model_name='maternallifetimearvhistory',
            name='maternal_visit',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalVisit'),
        ),
        migrations.AddField(
            model_name='maternallifetimearvhistory',
            name='prior_arv',
            field=models.ManyToManyField(to='td_maternal.PriorArv', verbose_name='Please list all of the ARVs that the mother ever received prior to the current pregnancy:'),
        ),
        migrations.AddField(
            model_name='maternallifetimearvhistory',
            name='site',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='maternalinterimidcc',
            name='maternal_visit',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalVisit'),
        ),
        migrations.AddField(
            model_name='maternalinterimidcc',
            name='site',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='maternalhivinterimhx',
            name='maternal_visit',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalVisit'),
        ),
        migrations.AddField(
            model_name='maternalhivinterimhx',
            name='site',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='maternaldiagnoses',
            name='diagnoses',
            field=models.ManyToManyField(blank=True, to='td_maternal.MaternalDiagnosesList', verbose_name='Have any of the following diagnoses occured since last visit?'),
        ),
        migrations.AddField(
            model_name='maternaldiagnoses',
            name='maternal_visit',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalVisit'),
        ),
        migrations.AddField(
            model_name='maternaldiagnoses',
            name='site',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='maternaldiagnoses',
            name='who',
            field=models.ManyToManyField(to='td_maternal.WcsDxAdult', verbose_name='List any new WHO Stage III/IV diagnoses that are not reported in the Question above:'),
        ),
        migrations.AddField(
            model_name='maternaldemographics',
            name='maternal_visit',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalVisit'),
        ),
        migrations.AddField(
            model_name='maternaldemographics',
            name='site',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='maternalcontraception',
            name='contraceptive_relative',
            field=models.ManyToManyField(to='td_maternal.MaternalRelatives', verbose_name='Have you discussed your contraceptive method with any of the following individuals? (Please select all that apply)'),
        ),
        migrations.AddField(
            model_name='maternalcontraception',
            name='maternal_visit',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalVisit'),
        ),
        migrations.AddField(
            model_name='maternalcontraception',
            name='site',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='maternalclinicalmeasurementstwo',
            name='maternal_visit',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalVisit'),
        ),
        migrations.AddField(
            model_name='maternalclinicalmeasurementstwo',
            name='site',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='maternalclinicalmeasurementsone',
            name='maternal_visit',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalVisit'),
        ),
        migrations.AddField(
            model_name='maternalclinicalmeasurementsone',
            name='site',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='maternalarvpreg',
            name='maternal_visit',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalVisit'),
        ),
        migrations.AddField(
            model_name='maternalarvpreg',
            name='site',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='maternalarvpostadh',
            name='maternal_visit',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalVisit'),
        ),
        migrations.AddField(
            model_name='maternalarvpostadh',
            name='site',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='maternalarvpost',
            name='maternal_visit',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalVisit'),
        ),
        migrations.AddField(
            model_name='maternalarvpost',
            name='site',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='maternalarv',
            name='maternal_arv_preg',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='td_maternal.MaternalArvPreg'),
        ),
        migrations.AddField(
            model_name='historicalsubjectconsent',
            name='maternal_eligibility',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='td_maternal.MaternalEligibility'),
        ),
        migrations.AddField(
            model_name='historicalsubjectconsent',
            name='site',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.Site'),
        ),
        migrations.AddField(
            model_name='historicalmaternaleligibilityloss',
            name='maternal_eligibility',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='td_maternal.MaternalEligibility'),
        ),
        migrations.AlterUniqueTogether(
            name='subjectconsent',
            unique_together={('first_name', 'dob', 'initials', 'version')},
        ),
        migrations.AlterUniqueTogether(
            name='maternalvisit',
            unique_together={('subject_identifier', 'visit_schedule_name', 'schedule_name', 'visit_code', 'visit_code_sequence'), ('subject_identifier', 'visit_schedule_name', 'schedule_name', 'report_datetime')},
        ),
        migrations.AlterUniqueTogether(
            name='maternalrando',
            unique_together={('sid', 'rx')},
        ),
        migrations.AlterUniqueTogether(
            name='maternalcontact',
            unique_together={('registered_subject', 'contact_datetime')},
        ),
        migrations.AlterUniqueTogether(
            name='maternalarvpostmed',
            unique_together={('maternal_arv_post', 'arv_code', 'modification_date')},
        ),
        migrations.AlterUniqueTogether(
            name='maternalarv',
            unique_together={('maternal_arv_preg', 'arv_code', 'start_date', 'stop_date')},
        ),
    ]
